{"version":3,"file":"teacher-homework.js","sources":["../src/features/homework/teacher-homework.js"],"sourcesContent":["import { auth } from '@features/auth/auth.js';\nimport { getUsers } from '@api/user.js';\nimport {\n  getUserHomeworkLessons,\n  getUserHomework,\n} from '@api/homework.js';\nimport { createPracticeTaskElement } from '@features/practice/practice.js';\nimport { uploadAnswers } from '@features/homework/homework-updates.js';\n\nconst studentSelect = document.querySelector('[data-student-select]');\nconst statusElement = document.querySelector('[data-homework-status]');\nconst hintElement = document.querySelector('[data-student-hint]');\nconst listElement = document.querySelector('[data-homework-list]');\nconst contentElement = document.querySelector('.js-homework-content');\n\nif (\n  studentSelect &&\n  statusElement &&\n  listElement &&\n  contentElement\n) {\n  auth.init();\n\n  const state = {\n    students: [],\n    studentByEmail: new Map(),\n    selectedEmail: null,\n    lessonsRequestId: 0,\n    homeworkRequestId: 0,\n    activeLessonCard: null,\n    activeLessonId: null,\n    studentsLoaded: false,\n  };\n\n  function setStatus(message) {\n    if (!statusElement) return;\n    statusElement.textContent = message || '';\n    statusElement.hidden = !message;\n  }\n\n  function setHintVisible(isVisible) {\n    if (!hintElement) return;\n    hintElement.hidden = !isVisible;\n  }\n\n  function clearLessonsList() {\n    listElement.innerHTML = '';\n  }\n\n  function clearHomeworkContent() {\n    contentElement.innerHTML = '';\n  }\n\n  function setActiveLessonCard(card) {\n    if (state.activeLessonCard && state.activeLessonCard !== card) {\n      state.activeLessonCard.classList.remove('homework-card--active');\n    }\n    state.activeLessonCard = card;\n    if (card) {\n      card.classList.add('homework-card--active');\n    }\n  }\n\n  function formatStudentName(student) {\n    if (!student || typeof student !== 'object') return 'Без імені';\n    const first =\n      student.firstName ||\n      student.firstname ||\n      student.nameFirst ||\n      student.givenName ||\n      '';\n    const last =\n      student.lastName ||\n      student.lastname ||\n      student.nameLast ||\n      student.familyName ||\n      '';\n    const trimmed = [first, last]\n      .map(part => String(part || '').trim())\n      .filter(Boolean)\n      .join(' ');\n    const fallback =\n      student.displayName ||\n      student.fullName ||\n      student.username ||\n      student.name ||\n      student.email ||\n      (student.id ? `ID ${student.id}` : '');\n    return trimmed || fallback || 'Без імені';\n  }\n\n  function updateStudentSelectPlaceholder(text, { disabled = true } = {}) {\n    studentSelect.innerHTML = '';\n    const option = document.createElement('option');\n    option.value = '';\n    option.textContent = text;\n    option.disabled = true;\n    option.selected = true;\n    studentSelect.appendChild(option);\n    studentSelect.disabled = disabled;\n  }\n\n  function renderStudentOptions(students) {\n    state.students = students;\n    state.studentByEmail.clear();\n    students.forEach(student => {\n      if (student?.email) {\n        state.studentByEmail.set(student.email, student);\n      }\n    });\n\n    if (!students.length) {\n      updateStudentSelectPlaceholder(\n        'Список студентів порожній',\n        { disabled: true }\n      );\n      setHintVisible(false);\n      return;\n    }\n\n    studentSelect.innerHTML = '';\n    const placeholder = document.createElement('option');\n    placeholder.value = '';\n    placeholder.textContent = 'Оберіть студента';\n    placeholder.disabled = true;\n    placeholder.selected = true;\n    studentSelect.appendChild(placeholder);\n\n    students\n      .slice()\n      .sort((a, b) => {\n        const nameA = formatStudentName(a).toLowerCase();\n        const nameB = formatStudentName(b).toLowerCase();\n        return nameA.localeCompare(nameB, 'uk');\n      })\n      .forEach(student => {\n        if (!student?.email) return;\n        const label = formatStudentName(student);\n        const email = String(student.email || '').trim();\n        const option = document.createElement('option');\n        option.value = email;\n        option.textContent =\n          email && email !== label ? `${label} — ${email}` : label;\n        studentSelect.appendChild(option);\n      });\n\n    studentSelect.disabled = false;\n    setHintVisible(true);\n  }\n\n  async function loadStudents() {\n    if (state.studentsLoaded) return;\n    state.studentsLoaded = true;\n\n    updateStudentSelectPlaceholder('Завантаження списку студентів…', {\n      disabled: true,\n    });\n    setStatus('Завантаження списку студентів…');\n\n    try {\n      const response = await getUsers();\n      const items = Array.isArray(response?.items) ? response.items : [];\n      const students = items.filter(\n        user => user && typeof user === 'object' && user.email\n      );\n      renderStudentOptions(students);\n      if (students.length) {\n        setStatus('Оберіть студента, щоб переглянути уроки.');\n      } else {\n        setStatus('Не знайдено студентів для перегляду.');\n      }\n    } catch (error) {\n      console.error('Не вдалося завантажити список студентів', error);\n      updateStudentSelectPlaceholder(\n        'Не вдалося завантажити студентів',\n        { disabled: true }\n      );\n      setHintVisible(false);\n      setStatus('Не вдалося завантажити список студентів. Спробуйте пізніше.');\n      state.studentsLoaded = false;\n    }\n  }\n\n  function resolveLessonUrl(lesson) {\n    if (!lesson || typeof lesson !== 'object') return null;\n    if (typeof lesson.url === 'string' && lesson.url) return lesson.url;\n    if (typeof lesson.link === 'string' && lesson.link) return lesson.link;\n\n    const params = new URLSearchParams();\n    const lessonId = lesson.lessonId || lesson.topicId || lesson.id || null;\n    const htmlPath = lesson.htmlPath || lesson.lessonPath || null;\n    const category = lesson.category || lesson.lessonCategory || null;\n    const level = lesson.level || lesson.lessonLevel || null;\n    const title = lesson.title || lesson.lessonTitle || lesson.name || null;\n\n    if (lessonId) params.set('topic', lessonId);\n    if (category) params.set('category', category);\n    if (level) params.set('level', level);\n    if (title) params.set('title', title);\n    if (htmlPath) params.set('file', htmlPath);\n\n    if (!params.has('topic')) return null;\n    return `lesson.html?${params.toString()}`;\n  }\n\n  function formatDueDate(lesson) {\n    const due =\n      lesson?.dueDate ||\n      lesson?.deadline ||\n      lesson?.due_at ||\n      lesson?.dueAt ||\n      null;\n    if (!due) return null;\n    const date = new Date(due);\n    if (Number.isNaN(date.getTime())) return null;\n    try {\n      return new Intl.DateTimeFormat('uk-UA', {\n        dateStyle: 'medium',\n      }).format(date);\n    } catch (error) {\n      return date.toLocaleDateString('uk-UA');\n    }\n  }\n\n  function createLessonCard(lesson, studentEmail) {\n    const card = document.createElement('article');\n    card.className = 'homework-card';\n    card.setAttribute('role', 'listitem');\n    if (lesson?.lessonId) {\n      card.dataset.id = lesson.lessonId;\n    }\n\n    const title = document.createElement('h3');\n    title.className = 'homework-card__title';\n    title.textContent = lesson?.lessonName || lesson?.title || 'Без назви';\n    card.appendChild(title);\n\n    const dueDateLabel = formatDueDate(lesson);\n    if (dueDateLabel) {\n      const due = document.createElement('p');\n      due.className = 'homework-card__meta';\n      due.textContent = `Строк: ${dueDateLabel}`;\n      card.appendChild(due);\n    }\n\n    const description =\n      lesson?.description ||\n      lesson?.lessonDescription ||\n      lesson?.summary ||\n      '';\n    if (description) {\n      const body = document.createElement('p');\n      body.className = 'homework-card__description';\n      body.textContent = description;\n      card.appendChild(body);\n    }\n\n    const lessonUrl = resolveLessonUrl(lesson);\n    if (lessonUrl) {\n      const link = document.createElement('button');\n      link.className = 'homework-card__link';\n      link.type = 'button';\n      link.textContent = 'відкрити';\n      card.appendChild(link);\n    }\n\n    card.addEventListener('click', () => {\n      if (!lesson?.lessonId || !studentEmail) return;\n      setActiveLessonCard(card);\n      loadHomeworkForStudent(lesson.lessonId, studentEmail);\n    });\n\n    return card;\n  }\n\n  function renderLessons(lessons, studentEmail) {\n    clearLessonsList();\n    if (!Array.isArray(lessons) || !lessons.length) {\n      setStatus('У цього студента поки немає призначених уроків.');\n      return;\n    }\n\n    const fragment = document.createDocumentFragment();\n    lessons.forEach(lesson => {\n      fragment.appendChild(createLessonCard(lesson, studentEmail));\n    });\n    listElement.appendChild(fragment);\n    setStatus('Оберіть урок, щоб переглянути практичні завдання.');\n  }\n\n  async function loadLessonsForStudent(studentEmail) {\n    const requestId = ++state.lessonsRequestId;\n    state.activeLessonId = null;\n    setActiveLessonCard(null);\n    clearLessonsList();\n    clearHomeworkContent();\n\n    if (!studentEmail) {\n      setStatus('Оберіть студента, щоб переглянути уроки.');\n      return;\n    }\n\n    setStatus('Завантаження уроків…');\n\n    try {\n      const lessons = await getUserHomeworkLessons(studentEmail);\n      if (\n        requestId !== state.lessonsRequestId ||\n        state.selectedEmail !== studentEmail\n      ) {\n        return;\n      }\n      renderLessons(lessons, studentEmail);\n    } catch (error) {\n      if (requestId !== state.lessonsRequestId) return;\n      console.error(\n        `Не вдалося завантажити уроки для ${studentEmail}`,\n        error\n      );\n      setStatus('Не вдалося завантажити уроки. Спробуйте пізніше.');\n    }\n  }\n\n  function renderHomeworkItems(items) {\n    clearHomeworkContent();\n    if (!Array.isArray(items) || !items.length) {\n      const emptyMessage = document.createElement('p');\n      emptyMessage.className = 'muted';\n      emptyMessage.textContent =\n        'Для цього уроку поки немає практичних завдань.';\n      contentElement.appendChild(emptyMessage);\n      return;\n    }\n\n    const container = document.createElement('div');\n    for (const item of items) {\n      if (item.homeworkType === 'task') {\n        try {\n          const data = JSON.parse(item.homeworkData);\n          const node = createPracticeTaskElement(data);\n          node.id = item._id;\n          uploadAnswers(node, item.answers);\n          container.appendChild(node);\n        } catch (error) {\n          console.error('Не вдалося відрендерити завдання', error);\n        }\n      } else if (item.homeworkType === 'theory') {\n        const data = item.homeworkData;\n        if (typeof data === 'string') {\n          container.insertAdjacentHTML('afterbegin', data);\n        }\n      }\n    }\n\n    contentElement.append(...container.children);\n  }\n\n  async function loadHomeworkForStudent(lessonId, studentEmail) {\n    if (!lessonId || !studentEmail) return;\n\n    const requestId = ++state.homeworkRequestId;\n    state.activeLessonId = lessonId;\n    setStatus('Завантаження завдань…');\n\n    try {\n      const result = await getUserHomework({\n        userEmail: studentEmail,\n        lessonId,\n        limit: 1000,\n      });\n      if (\n        requestId !== state.homeworkRequestId ||\n        state.selectedEmail !== studentEmail ||\n        state.activeLessonId !== lessonId\n      ) {\n        return;\n      }\n\n      const items = Array.isArray(result?.items) ? [...result.items] : [];\n      items.sort((a, b) => {\n        if (a.homeworkType === b.homeworkType) return 0;\n        if (a.homeworkType === 'task') return -1;\n        if (b.homeworkType === 'task') return 1;\n        return 0;\n      });\n      renderHomeworkItems(items);\n\n      if (!items.length) {\n        setStatus('Для цього уроку поки немає практичних завдань.');\n      } else {\n        setStatus('');\n      }\n    } catch (error) {\n      if (requestId !== state.homeworkRequestId) return;\n      console.error(\n        `Не вдалося завантажити завдання для уроку ${lessonId}`,\n        error\n      );\n      setStatus('Не вдалося завантажити завдання. Спробуйте пізніше.');\n    }\n  }\n\n  function handleStudentChange(event) {\n    const email = event.target.value;\n    if (!email || email === state.selectedEmail) return;\n    state.selectedEmail = email;\n    setHintVisible(false);\n    loadLessonsForStudent(email);\n  }\n\n  function applyAdminAccess(isAllowed) {\n    if (!isAllowed) {\n      state.selectedEmail = null;\n      state.studentsLoaded = false;\n      clearLessonsList();\n      clearHomeworkContent();\n      updateStudentSelectPlaceholder(\n        'Доступно лише для адміністраторів',\n        { disabled: true }\n      );\n      setHintVisible(false);\n      return;\n    }\n    loadStudents();\n  }\n\n  studentSelect.addEventListener('change', handleStudentChange);\n\n  auth.subscribe(snapshot => {\n    if (!snapshot.isSignedIn) {\n      setStatus(\n        'Увійдіть у свій адміністративний акаунт, щоб переглядати домашні роботи студентів.'\n      );\n      applyAdminAccess(false);\n      return;\n    }\n\n    if (!auth.isAdmin(snapshot.user)) {\n      setStatus('Ця сторінка доступна лише адміністраторам.');\n      applyAdminAccess(false);\n      return;\n    }\n\n    applyAdminAccess(true);\n    if (!state.selectedEmail) {\n      setStatus('Оберіть студента, щоб переглянути уроки.');\n    }\n  });\n}\n"],"names":["studentSelect","statusElement","hintElement","listElement","contentElement","setStatus","message","setHintVisible","isVisible","clearLessonsList","clearHomeworkContent","setActiveLessonCard","card","state","formatStudentName","student","first","last","trimmed","part","fallback","updateStudentSelectPlaceholder","text","disabled","option","renderStudentOptions","students","placeholder","a","b","nameA","nameB","label","email","resolveLessonUrl","lesson","params","lessonId","htmlPath","category","level","title","formatDueDate","due","date","createLessonCard","studentEmail","dueDateLabel","description","body","link","loadHomeworkForStudent","renderLessons","lessons","fragment","renderHomeworkItems","items","emptyMessage","container","item","data","node","createPracticeTaskElement","uploadAnswers","error","handleStudentChange","event","loadLessonsForStudent","applyAdminAccess","isAllowed","loadStudents","auth","response","getUsers","user","requestId","getUserHomeworkLessons","result","getUserHomework","snapshot"],"mappings":"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"}