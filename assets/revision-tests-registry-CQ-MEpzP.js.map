{"version":3,"file":"revision-tests-registry-CQ-MEpzP.js","sources":["../../src/data/revision-tests/present-simple-a1.js","../../src/features/revision-tests/revision-tests-registry.js"],"sourcesContent":["const presentSimpleA1 = {\n  id: 'present-simple-a1',\n  title: 'Перша перевірка знаннь',\n  description:\n    'Перевірка на знання базових тем (привітання, базова інформація про себе, кольори, алфавіт, офісні предмети)',\n  level: 'A1',\n  tags: ['grammar', 'present simple'],\n  duration: 25,\n\n  tasks: [\n    {\n      id: 'open-speaking-check-1',\n      type: 'open',\n      prompt: 'Answer the following speaking questions. Use full sentences.',\n      items: [\n        { situation: 'What is your name?' },\n        { situation: 'How old are you?' },\n        { situation: 'Where are you from?' },\n        { situation: 'What is your nationality?' },\n        { situation: 'How do you greet your teacher in the morning?' },\n        { situation: 'How do you say goodbye to your friends?' },\n        { situation: 'How do you thank your teacher after the lesson?' },\n        { situation: 'Spell your name letter by letter.' },\n        { situation: \"Spell the word 'book' or 'teacher'.\" },\n        { situation: 'Spell your favorite color.' },\n        { situation: 'What color is your pen?' },\n        { situation: 'What is your favorite color and why?' },\n        { situation: 'What colors do you see around you right now?' },\n        { situation: 'Point to an object near you and say what it is.' },\n        { situation: 'Point to an object in the distance and say what it is.' },\n        { situation: 'Point to several objects and say what they are.' },\n        { situation: 'Name any object in the room with an article.' },\n        {\n          situation:\n            'Name one object in the room, then several more of the same kind.',\n        },\n        { situation: 'Describe what is in your backpack or pencil case.' },\n        { situation: 'Describe your pencil case or workspace.' },\n        { situation: 'What do you usually take with you to school?' },\n        { situation: 'What do you see on your desk?' },\n        { situation: 'Describe the room you are sitting in right now.' },\n        { situation: 'Where are you now?' },\n        { situation: 'Who is your best friend?' },\n        { situation: 'Tell us briefly about your family.' },\n        { situation: 'Tell me about your favorite animal.' },\n        {\n          situation:\n            'How do you greet your friend when you enter the classroom?',\n        },\n        { situation: 'How do you greet your friend in the morning?' },\n        { situation: 'How do you say goodbye to your friend after school?' },\n        { situation: 'Do you have one cat or two?' },\n        { situation: 'Do you have a brother or a sister?' },\n        { situation: 'What color is your backpack?' },\n        { situation: 'Describe your clothes today using color words.' },\n        { situation: 'What color is your favorite object?' },\n        { situation: 'Name five colors in English.' },\n        { situation: 'Show me something blue and say what it is.' },\n        { situation: 'Tell me what you usually have on your desk.' },\n        { situation: 'Talk about your school or classroom using five words.' },\n        { situation: 'Say one sentence with your favorite color and object.' },\n      ],\n      scoring: {\n        criteria: [\n          'Uses complete sentences when possible',\n          'Pronounces words clearly',\n          'Understands and responds without translation',\n          'Uses A1 vocabulary correctly',\n        ],\n      },\n    },\n  ],\n};\n\nexport default presentSimpleA1;\n","const revisionTestModules = import.meta.glob(\n  '@data/revision-tests/*.js',\n  {\n    eager: true,\n    import: 'default',\n  }\n);\n\nfunction toSlug(filePath = '') {\n  const parts = filePath.split('/');\n  const fileName = parts[parts.length - 1] || '';\n  return fileName.replace(/\\.js$/i, '');\n}\n\nfunction normaliseItem(item, index, taskId) {\n  if (item && typeof item === 'object') {\n    const prompt = item.prompt || item.question || item.text;\n    return {\n      ...item,\n      prompt: String(prompt ?? `Пункт ${index + 1}`),\n    };\n  }\n\n  return {\n    prompt: String(item ?? `Пункт ${index + 1} (${taskId})`),\n  };\n}\n\nfunction normaliseTask(task, index, testId) {\n  if (!task || typeof task !== 'object') {\n    return {\n      id: `${testId}-task-${index + 1}`,\n      title: `Завдання ${index + 1}`,\n      instructions: '',\n      items: [],\n    };\n  }\n\n  const taskId =\n    typeof task.id === 'string' && task.id.trim()\n      ? task.id.trim()\n      : `${testId}-task-${index + 1}`;\n\n  const items = Array.isArray(task.items)\n    ? task.items.map((item, itemIndex) =>\n        normaliseItem(item, itemIndex, taskId)\n      )\n    : [];\n\n  return {\n    ...task,\n    id: taskId,\n    title:\n      typeof task.title === 'string' && task.title.trim()\n        ? task.title.trim()\n        : `Завдання ${index + 1}`,\n    instructions:\n      typeof task.instructions === 'string' ? task.instructions.trim() : '',\n    items,\n  };\n}\n\nfunction normaliseTest(data, filePath) {\n  if (!data || typeof data !== 'object') {\n    console.warn(\n      '[revision-tests] Очікується обʼєкт за замовчуванням у файлі:',\n      filePath\n    );\n    return null;\n  }\n\n  const slug = toSlug(filePath).toLowerCase();\n  const id =\n    typeof data.id === 'string' && data.id.trim() ? data.id.trim() : slug;\n\n  const tasks = Array.isArray(data.tasks)\n    ? data.tasks.map((task, index) => normaliseTask(task, index, id))\n    : [];\n\n  return {\n    ...data,\n    id,\n    slug,\n    title:\n      typeof data.title === 'string' && data.title.trim()\n        ? data.title.trim()\n        : slug,\n    description:\n      typeof data.description === 'string' ? data.description.trim() : '',\n    tasks,\n    sourcePath: filePath,\n  };\n}\n\nconst revisionTests = Object.entries(revisionTestModules)\n  .map(([filePath, rawData]) => normaliseTest(rawData, filePath))\n  .filter(Boolean)\n  .sort((a, b) => {\n    const orderA = Number.isFinite(a.order) ? a.order : Number.MAX_SAFE_INTEGER;\n    const orderB = Number.isFinite(b.order) ? b.order : Number.MAX_SAFE_INTEGER;\n    if (orderA !== orderB) return orderA - orderB;\n    return a.title.localeCompare(b.title, 'uk', {\n      sensitivity: 'base',\n    });\n  });\n\nconst testsBySlug = new Map(revisionTests.map(test => [test.slug, test]));\n\nexport function getAllRevisionTests() {\n  return revisionTests.map(test => ({\n    ...test,\n    tasks: test.tasks.map(task => ({\n      ...task,\n      items: task.items.map(item => ({\n        ...item,\n        options: Array.isArray(item.options) ? [...item.options] : item.options,\n        answers: Array.isArray(item.answers) ? [...item.answers] : item.answers,\n        examples: Array.isArray(item.examples)\n          ? [...item.examples]\n          : item.examples,\n      })),\n      materials: Array.isArray(task.materials)\n        ? task.materials.map(material =>\n            material && typeof material === 'object'\n              ? { ...material }\n              : material\n          )\n        : task.materials,\n      notes: Array.isArray(task.notes)\n        ? [...task.notes]\n        : task.notes,\n      answerKey: Array.isArray(task.answerKey)\n        ? [...task.answerKey]\n        : task.answerKey,\n    })),\n  }));\n}\n\nexport function findRevisionTestBySlug(slug) {\n  if (!slug) return null;\n  const normalisedSlug = String(slug).trim().toLowerCase();\n  const entry = testsBySlug.get(normalisedSlug);\n  return entry ? { ...entry } : null;\n}\n"],"names":["presentSimpleA1","revisionTestModules","__vite_glob_0_0","toSlug","filePath","parts","normaliseItem","item","index","taskId","prompt","normaliseTask","task","testId","items","itemIndex","normaliseTest","data","slug","id","tasks","revisionTests","rawData","a","b","orderA","orderB","testsBySlug","test","getAllRevisionTests","material","findRevisionTestBySlug","normalisedSlug","entry"],"mappings":"AAAA,MAAMA,EAAkB,CACtB,GAAI,oBACJ,MAAO,yBACP,YACE,8GACF,MAAO,KACP,KAAM,CAAC,UAAW,gBAAgB,EAClC,SAAU,GAEV,MAAO,CACL,CACE,GAAI,wBACJ,KAAM,OACN,OAAQ,+DACR,MAAO,CACL,CAAE,UAAW,oBAAsB,EACnC,CAAE,UAAW,kBAAoB,EACjC,CAAE,UAAW,qBAAuB,EACpC,CAAE,UAAW,2BAA6B,EAC1C,CAAE,UAAW,+CAAiD,EAC9D,CAAE,UAAW,yCAA2C,EACxD,CAAE,UAAW,iDAAmD,EAChE,CAAE,UAAW,mCAAqC,EAClD,CAAE,UAAW,qCAAuC,EACpD,CAAE,UAAW,4BAA8B,EAC3C,CAAE,UAAW,yBAA2B,EACxC,CAAE,UAAW,sCAAwC,EACrD,CAAE,UAAW,8CAAgD,EAC7D,CAAE,UAAW,iDAAmD,EAChE,CAAE,UAAW,wDAA0D,EACvE,CAAE,UAAW,iDAAmD,EAChE,CAAE,UAAW,8CAAgD,EAC7D,CACE,UACE,kEACH,EACD,CAAE,UAAW,mDAAqD,EAClE,CAAE,UAAW,yCAA2C,EACxD,CAAE,UAAW,8CAAgD,EAC7D,CAAE,UAAW,+BAAiC,EAC9C,CAAE,UAAW,iDAAmD,EAChE,CAAE,UAAW,oBAAsB,EACnC,CAAE,UAAW,0BAA4B,EACzC,CAAE,UAAW,oCAAsC,EACnD,CAAE,UAAW,qCAAuC,EACpD,CACE,UACE,4DACH,EACD,CAAE,UAAW,8CAAgD,EAC7D,CAAE,UAAW,qDAAuD,EACpE,CAAE,UAAW,6BAA+B,EAC5C,CAAE,UAAW,oCAAsC,EACnD,CAAE,UAAW,8BAAgC,EAC7C,CAAE,UAAW,gDAAkD,EAC/D,CAAE,UAAW,qCAAuC,EACpD,CAAE,UAAW,8BAAgC,EAC7C,CAAE,UAAW,4CAA8C,EAC3D,CAAE,UAAW,6CAA+C,EAC5D,CAAE,UAAW,uDAAyD,EACtE,CAAE,UAAW,uDAAyD,CACvE,EACD,QAAS,CACP,SAAU,CACR,wCACA,2BACA,+CACA,8BACD,CACF,CACF,CACF,CACH,ECxEMC,EAAsB,OAAA,OAAA,CAAA,4CAAAC,CAAA,CAAA,EAQ5B,SAASC,EAAOC,EAAW,GAAI,CAC7B,MAAMC,EAAQD,EAAS,MAAM,GAAG,EAEhC,OADiBC,EAAMA,EAAM,OAAS,CAAC,GAAK,IAC5B,QAAQ,SAAU,EAAE,CACtC,CAEA,SAASC,EAAcC,EAAMC,EAAOC,EAAQ,CAC1C,GAAIF,GAAQ,OAAOA,GAAS,SAAU,CACpC,MAAMG,EAASH,EAAK,QAAUA,EAAK,UAAYA,EAAK,KACpD,MAAO,CACL,GAAGA,EACH,OAAQ,OAAOG,GAAU,SAASF,EAAQ,CAAC,EAAE,CACnD,CACG,CAED,MAAO,CACL,OAAQ,OAAOD,GAAQ,SAASC,EAAQ,CAAC,KAAKC,CAAM,GAAG,CAC3D,CACA,CAEA,SAASE,EAAcC,EAAMJ,EAAOK,EAAQ,CAC1C,GAAI,CAACD,GAAQ,OAAOA,GAAS,SAC3B,MAAO,CACL,GAAI,GAAGC,CAAM,SAASL,EAAQ,CAAC,GAC/B,MAAO,YAAYA,EAAQ,CAAC,GAC5B,aAAc,GACd,MAAO,CAAE,CACf,EAGE,MAAMC,EACJ,OAAOG,EAAK,IAAO,UAAYA,EAAK,GAAG,KAAM,EACzCA,EAAK,GAAG,KAAM,EACd,GAAGC,CAAM,SAASL,EAAQ,CAAC,GAE3BM,EAAQ,MAAM,QAAQF,EAAK,KAAK,EAClCA,EAAK,MAAM,IAAI,CAACL,EAAMQ,IACpBT,EAAcC,EAAMQ,EAAWN,CAAM,CACtC,EACD,GAEJ,MAAO,CACL,GAAGG,EACH,GAAIH,EACJ,MACE,OAAOG,EAAK,OAAU,UAAYA,EAAK,MAAM,KAAM,EAC/CA,EAAK,MAAM,KAAM,EACjB,YAAYJ,EAAQ,CAAC,GAC3B,aACE,OAAOI,EAAK,cAAiB,SAAWA,EAAK,aAAa,KAAI,EAAK,GACrE,MAAAE,CACJ,CACA,CAEA,SAASE,EAAcC,EAAMb,EAAU,CACrC,GAAI,CAACa,GAAQ,OAAOA,GAAS,SAC3B,eAAQ,KACN,+DACAb,CACN,EACW,KAGT,MAAMc,EAAOf,EAAOC,CAAQ,EAAE,YAAW,EACnCe,EACJ,OAAOF,EAAK,IAAO,UAAYA,EAAK,GAAG,KAAM,EAAGA,EAAK,GAAG,KAAI,EAAKC,EAE7DE,EAAQ,MAAM,QAAQH,EAAK,KAAK,EAClCA,EAAK,MAAM,IAAI,CAACL,EAAMJ,IAAUG,EAAcC,EAAMJ,EAAOW,CAAE,CAAC,EAC9D,GAEJ,MAAO,CACL,GAAGF,EACH,GAAAE,EACA,KAAAD,EACA,MACE,OAAOD,EAAK,OAAU,UAAYA,EAAK,MAAM,KAAM,EAC/CA,EAAK,MAAM,KAAM,EACjBC,EACN,YACE,OAAOD,EAAK,aAAgB,SAAWA,EAAK,YAAY,KAAI,EAAK,GACnE,MAAAG,EACA,WAAYhB,CAChB,CACA,CAEA,MAAMiB,EAAgB,OAAO,QAAQpB,CAAmB,EACrD,IAAI,CAAC,CAACG,EAAUkB,CAAO,IAAMN,EAAcM,EAASlB,CAAQ,CAAC,EAC7D,OAAO,OAAO,EACd,KAAK,CAACmB,EAAGC,IAAM,CACd,MAAMC,EAAS,OAAO,SAASF,EAAE,KAAK,EAAIA,EAAE,MAAQ,OAAO,iBACrDG,EAAS,OAAO,SAASF,EAAE,KAAK,EAAIA,EAAE,MAAQ,OAAO,iBAC3D,OAAIC,IAAWC,EAAeD,EAASC,EAChCH,EAAE,MAAM,cAAcC,EAAE,MAAO,KAAM,CAC1C,YAAa,MACnB,CAAK,CACL,CAAG,EAEGG,EAAc,IAAI,IAAIN,EAAc,IAAIO,GAAQ,CAACA,EAAK,KAAMA,CAAI,CAAC,CAAC,EAEjE,SAASC,GAAsB,CACpC,OAAOR,EAAc,IAAIO,IAAS,CAChC,GAAGA,EACH,MAAOA,EAAK,MAAM,IAAIhB,IAAS,CAC7B,GAAGA,EACH,MAAOA,EAAK,MAAM,IAAIL,IAAS,CAC7B,GAAGA,EACH,QAAS,MAAM,QAAQA,EAAK,OAAO,EAAI,CAAC,GAAGA,EAAK,OAAO,EAAIA,EAAK,QAChE,QAAS,MAAM,QAAQA,EAAK,OAAO,EAAI,CAAC,GAAGA,EAAK,OAAO,EAAIA,EAAK,QAChE,SAAU,MAAM,QAAQA,EAAK,QAAQ,EACjC,CAAC,GAAGA,EAAK,QAAQ,EACjBA,EAAK,QACjB,EAAQ,EACF,UAAW,MAAM,QAAQK,EAAK,SAAS,EACnCA,EAAK,UAAU,IAAIkB,GACjBA,GAAY,OAAOA,GAAa,SAC5B,CAAE,GAAGA,CAAU,EACfA,CACL,EACDlB,EAAK,UACT,MAAO,MAAM,QAAQA,EAAK,KAAK,EAC3B,CAAC,GAAGA,EAAK,KAAK,EACdA,EAAK,MACT,UAAW,MAAM,QAAQA,EAAK,SAAS,EACnC,CAAC,GAAGA,EAAK,SAAS,EAClBA,EAAK,SACf,EAAM,CACH,EAAC,CACJ,CAEO,SAASmB,EAAuBb,EAAM,CAC3C,GAAI,CAACA,EAAM,OAAO,KAClB,MAAMc,EAAiB,OAAOd,CAAI,EAAE,KAAI,EAAG,cACrCe,EAAQN,EAAY,IAAIK,CAAc,EAC5C,OAAOC,EAAQ,CAAE,GAAGA,CAAK,EAAK,IAChC"}