{"version":3,"file":"lesson.js","sources":["../src/scripts/lesson.js","../src/scripts/api/chatGpt.js","../src/scripts/practice-generator.js"],"sourcesContent":["import { lessons, lessonCategories } from '../data/lessons.js';\n\nconst basePath = (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.BASE_URL) || '/';\n\nfunction resolveAssetPath(path) {\n  const normalizedBase = basePath.endsWith('/') ? basePath : `${basePath}/`;\n  const rawPath = String(path || '');\n  if (rawPath.startsWith(normalizedBase)) return rawPath;\n  return `${normalizedBase}${rawPath.replace(/^\\/+/, '')}`;\n}\n\nconst params = new URLSearchParams(window.location.search);\nconst topicId = params.get('topic');\nconst fallbackTitle = params.get('title');\nconst fallbackCategory = params.get('category');\nconst fallbackLevel = params.get('level');\nconst fallbackFile = params.get('file');\n\nconst lesson = topicId ? lessons.find((item) => item.id === topicId) : undefined;\n\nconst resolvedTitle = lesson?.title ?? (fallbackTitle ? decodeURIComponent(fallbackTitle) : 'Матеріал уроку');\nconst resolvedCategory = lesson?.category ?? (fallbackCategory ? decodeURIComponent(fallbackCategory) : '');\nconst resolvedLevel = lesson?.level ?? (fallbackLevel ? decodeURIComponent(fallbackLevel) : '');\nconst resolvedFile = (() => {\n  const candidate = lesson?.htmlPath ?? (fallbackFile ? decodeURIComponent(fallbackFile) : null);\n  if (!candidate) return null;\n  return candidate.startsWith('lessons/') ? candidate : null;\n})();\n\nwindow.lessonContext = {\n  id: lesson?.id ?? topicId ?? null,\n  title: resolvedTitle,\n  category: resolvedCategory,\n  level: resolvedLevel,\n  htmlPath: resolvedFile,\n};\n\nconst titleElement = document.querySelector('[data-lesson-title]');\nconst categoryElement = document.querySelector('[data-lesson-category]');\nconst levelElement = document.querySelector('[data-lesson-level]');\nconst statusElement = document.querySelector('[data-lesson-status]');\nconst contentElement = document.getElementById('lesson-content');\n\nfunction setCurrentYear() {\n  const yearEl = document.querySelector('[data-component=\"copyright-year\"]');\n  if (!yearEl) return;\n  yearEl.textContent = String(new Date().getFullYear());\n}\n\nfunction renderMeta() {\n  if (titleElement) titleElement.textContent = resolvedTitle;\n  const categoryLabel = lessonCategories[resolvedCategory]?.label ?? '';\n  const categoryText = categoryLabel || resolvedCategory;\n  if (categoryElement) {\n    categoryElement.textContent = categoryText || '';\n  }\n  if (levelElement) {\n    levelElement.textContent = resolvedLevel ? `Рівень: ${resolvedLevel}` : '';\n  }\n  document.title = `${resolvedTitle} | English Teacher Platform`;\n}\n\nasync function loadLesson() {\n  if (!contentElement) return;\n\n  if (!resolvedFile) {\n    if (statusElement) {\n      statusElement.textContent = 'Не вдалося визначити файл з матеріалом. Перейдіть назад та оберіть тему зі списку.';\n    }\n    return;\n  }\n\n  try {\n    const response = await fetch(resolveAssetPath(resolvedFile));\n    if (!response.ok) {\n      throw new Error(`Не вдалося завантажити файл: ${response.status}`);\n    }\n    const markup = await response.text();\n    contentElement.innerHTML = markup;\n  } catch (error) {\n    if (statusElement) {\n      statusElement.textContent = 'Сталася помилка під час завантаження матеріалу. Спробуйте пізніше або поверніться до каталогу.';\n    }\n    console.error(error);\n  }\n}\n\nfunction init() {\n  setCurrentYear();\n  renderMeta();\n  loadLesson();\n}\n\ninit();\n","// tasksGenerator.js\n\n// ---- HTTP wrapper -----------------------------------------------------------\nexport const getAnswer = async body => {\n  const BASE_URL = 'https://vq1wtq2d2l.execute-api.us-east-2.amazonaws.com/dev';\n  // const BASE_URL = \"http://localhost:3000/dev\";\n  const url = BASE_URL + '/openai';\n\n  const response = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: { 'Content-Type': 'application/json' },\n  }).then(res => res.json());\n\n  return response; // your endpoint returns a JSON string -> we'll JSON.parse later\n};\n\n// ---- Public API -------------------------------------------------------------\n/**\n * Генерує один блок завдання під конкретний typeQuestion (mcq/gap/...)\n * @param {string} topic - наприклад: \"Present Simple\"\n * @param {string} typeQuestion - один з: mcq, gap, transform, match, error, order, short, writing\n * @param {object} opts - { language: 'uk', items: 10, seedId: 'ps' } тощо\n * @returns {Promise<object>} JSON блоку завдання\n */\nexport const generateTask = async (topic, typeQuestion, opts = {}) => {\n  const promptBody = buildBody(topic, typeQuestion, opts);\n  const raw = await getAnswer(promptBody);\n\n  // API зазвичай повертає строку JSON -> парсимо.\n  // Якщо вже об'єкт — просто повернемо як є.\n  try {\n    if (typeof raw === 'string') return JSON.parse(raw);\n    return raw;\n  } catch (e) {\n    // На випадок якщо модель вивела щось зайве — спроба витягнути JSON через regex\n    const jsonMatch =\n      typeof raw === 'string' ? raw.match(/\\{[\\s\\S]*\\}$/) : null;\n    if (jsonMatch) return JSON.parse(jsonMatch[0]);\n    throw new Error('Не вдалося розпарсити JSON відповіді моделі');\n  }\n};\n\n/**\n * Генерує HTML-розмітку теоретичного матеріалу (таблиці з правилами та прикладами)\n * @param {string} topic - назва теми (наприклад: \"Present Simple\")\n * @param {object} opts - { language: 'uk' | 'en' }\n * @returns {Promise<string>} HTML-фрагмент з <table> блоками\n */\nexport const generateTheory = async (topic, opts = {}) => {\n  const body = buildTheoryBody(topic, opts);\n  const raw = await getAnswer(body);\n  // Очікуємо чистий HTML-фрагмент (рядок). Якщо об'єкт — дістанемо content\n  if (typeof raw === 'string') return raw;\n  if (raw && typeof raw.content === 'string') return raw.content;\n  // Спроба видобути HTML між першими <table ...> ... (на випадок зайвого тексту)\n  const m = String(raw || '').match(/<table[\\s\\S]*<\\/table>/i);\n  if (m) return m[0];\n  throw new Error('Відповідь не містить HTML');\n};\n\n// ---- Prompt builder ---------------------------------------------------------\nfunction buildBody(topic, typeQuestion, opts = {}) {\n  const token = localStorage.getItem('gptToken');\n  if (!token || token?.length < 10) {\n    console.warn('⚠️ gptToken відсутній у localStorage');\n    const token = prompt('Enter Your GPT Token');\n    localStorage.setItem('gptToken', token);\n  }\n\n  const model = 'gpt-4o-mini';\n  const normalizedType = String(typeQuestion || '')\n    .trim()\n    .toLowerCase();\n\n  const { system, user } = makeMessages(topic, normalizedType, opts);\n\n  return {\n    token,\n    model,\n    messages: [\n      { role: 'system', content: system },\n      { role: 'user', content: user },\n    ],\n    temperature: 0.3,\n    max_tokens: 4000,\n  };\n}\n\nfunction buildTheoryBody(topic, opts = {}) {\n  let token = localStorage.getItem('gptToken');\n  if (!token || token?.length < 10) {\n    console.warn('⚠️ gptToken відсутній у localStorage');\n    token = prompt('Enter Your GPT Token');\n    if (token) localStorage.setItem('gptToken', token);\n  }\n  const model = 'gpt-4o-mini';\n  const lang = (opts.language || 'uk').toLowerCase();\n\n  const system = `You are an ESL (English as a Second Language) content generator.  \nCreate a **detailed study guide in HTML tables** for the following grammar/vocabulary topic:\n\nTOPIC: ${topic}\nLEVEL: A1-C2\nLANGUAGE OF EXPLANATION: English\nACCENT_COLOR: #00837f\n\nREQUIREMENTS:\n1. Output only valid HTML <table> structures (border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:100%\").  \n2. Use clear headers inside tables with <span style=\"color: #00837f\"><strong>…</strong></span>.  \n3. Highlight key grammar points in <strong>bold</strong>.  \n4. Use examples in simple everyday vocabulary, 1–2 per point.  \n5. You may generate ANY number of tables depending on how much detail the topic requires.  \n6. Tables should cover different aspects such as:\n   - Forms (affirmative, negative, questions)  \n   - Usage (rules, functions, signal words, time markers)  \n   - Common mistakes (“Use it right!”)  \n   - Exceptions/irregularities/special cases  \n   - Practical examples or mini-dialogues  \n   - Vocabulary lists (if relevant to the topic)  \n   - Comparison with similar grammar points (if relevant)  \n7. Make the content structured like a mini-textbook chapter:  \n   - Start with a table that introduces the main concept and its basic forms.  \n   - Add extra tables for usage, examples, pitfalls, exceptions, etc.  \n   - End with a summary/revision table.  \n8. Keep everything inside tables, do NOT output free text outside tables.  \n\nGOAL:\nProduce a **ready-to-use study guide** in HTML tables, so that learners can read it as a digital textbook.  \nBe as detailed as possible, but keep the language simple and level-appropriate.  `;\n\n  const user = `Generate the full HTML tables for topic: ${topic}.`;\n\n  return {\n    token,\n    model,\n    messages: [\n      { role: 'system', content: system },\n      { role: 'user', content: user },\n    ],\n    temperature: 0.4,\n    max_tokens: 16384,\n  };\n}\n\n// ---- Templates: system + user by task type ---------------------------------\n\n/**\n * Кожен тип завдання має:\n * - коротку інструкцію (що генеруємо, які поля)\n * - приклад (few-shot) у system\n * - суворі вимоги: лише JSON, українська, без крапок у відповідях де потрібно тощо\n */\nfunction makeMessages(topic, type, opts) {\n  const lang = opts.language || 'uk'; // наразі використовуємо ua/uk\n  const itemsCount = Number.isInteger(opts.items)\n    ? opts.items\n    : defaultItemsByType[type] || 10;\n  const seedId = opts.seedId || shortSeed(topic);\n\n  const commonRules = `\nТИ — генератор навчальних завдань з англійської мови.\nМЕТА: Згенерувати ОДИН блок завдань типу \"${type}\" по темі \"${topic}\".\nПОВЕРТАЙ ЛИШЕ ВАЛІДНИЙ JSON. Узгоджуйся рівнем А1–A2.\nМова інтерфейсу — українська.\nКодування — UTF-8. Без пояснень, без префіксів, без \\`\\`\\`.\nВерифікуй внутрішню узгодженість (варіанти відповіді відповідають правилу/темі).\n`;\n\n  const templates = {\n    mcq: {\n      system: `\n${commonRules}\nСХЕМА ВИХОДУ:\n{\n  \"id\": \"mcq-${seedId}-1\",\n  \"type\": \"mcq\",\n  \"prompt\": \"<коротка інструкція українською>\",\n  \"items\": [\n    {\n      \"q\": \"<питання зі зниклою формою>\",\n      \"choices\": [\"<варіант0>\", \"<варіант1>\", \"<варіант2>\"],\n      \"answer\": [\"<index_правильної_відповіді_рядком>\"]\n    },\n    ...\n  ]\n}\n\nВИМОГИ:\n- ${itemsCount} пунктів.\n- Формат як у прикладі нижче.\n- У choices рівно 3 варіанти, лише один правильний.\n- Правильна відповідь — індекс як рядок: \"0\" | \"1\" | \"2\".\n- Питання та варіанти короткі, природні, у темі \"${topic}\".\n- ЖОДНОГО додаткового тексту поза JSON.\n\nПРИКЛАД (АНАЛОГІЧНИЙ; НЕ КОПІЮВАТИ ДОКЛАДНО ЗМІСТ):\n{\n  \"id\": \"mcq-ps-1\",\n  \"type\": \"mcq\",\n  \"prompt\": \"Обери правильну форму (Present Simple)\",\n  \"items\": [\n    { \"q\": \"He usually ___ the bus to work.\", \"choices\": [\"take\", \"takes\", \"is taking\"], \"answer\": [\"1\"] },\n    { \"q\": \"They ___ coffee in the morning.\", \"choices\": [\"have\", \"haves\", \"are having\"], \"answer\": [\"0\"] }\n  ]\n}\n      `.trim(),\n      user: `\nТема: ${topic}\nЗгенеруй блок типу \"mcq\" строго за СХЕМОЮ ВИХОДУ.\nКількість пунктів: ${itemsCount}.\n      `.trim(),\n    },\n\n    gap: {\n      system: `\n${commonRules}\nСХЕМА ВИХОДУ:\n{\n  \"id\": \"gap-${seedId}-1\",\n  \"type\": \"gap\",\n  \"prompt\": \"<інструкція>\",\n  \"items\": [\n    { \"q\": \"<They ___ (work) on Sundays.>\", \"answer\": [\"<правильна форма>\", \"<альтернатива_якщо_є>\"] },\n    ...\n  ]\n}\nВИМОГИ:\n- ${itemsCount} пунктів.\n- В полі \"answer\" завжди масив зі щонайменше одним варіантом.\n- Коротко, рівень А1–A2.\n      `.trim(),\n      user: oneLineUser(topic, 'gap', itemsCount),\n    },\n\n    transform: {\n      system: `\n${commonRules}\nСХЕМА ВИХОДУ:\n{\n  \"id\": \"transform-${seedId}-1\",\n  \"type\": \"transform\",\n  \"prompt\": \"Перетвори на заперечення (Present Simple, без крапки)\",\n  \"items\": [\n    {\n      \"q\": \"She likes coffee.\",\n      \"hint\": \"використай doesn't; без крапки\",\n      \"answer\": [\"she doesn't like coffee\", \"she does not like coffee\"]\n    }\n  ]\n}\nВИМОГИ:\n- ${itemsCount} пунктів.\n- Усі відповіді — без фінальної крапки (якщо так вказано в prompt).\n- Дай корисний \"hint\".\n      `.trim(),\n      user: oneLineUser(topic, 'transform', itemsCount),\n    },\n\n    match: {\n      system: `\n${commonRules}\nСХЕМА ВИХОДУ:\n{\n  \"id\": \"match-${seedId}-1\",\n  \"type\": \"match\",\n  \"prompt\": \"Зістав: дієслово → форма 3-ї особи (he/she/it)\",\n  \"pairs\": [\n    { \"left\": \"go\", \"right\": \"goes\" },\n    ...\n  ]\n}\nВИМОГИ:\n- Кількість пар: ${Math.max(6, Math.min(12, itemsCount))}.\n- Однозначні відповідності (без омонімії у межах набору).\n      `.trim(),\n      user: oneLineUser(topic, 'match', itemsCount),\n    },\n\n    error: {\n      system: `\n${commonRules}\nСХЕМА ВИХОДУ:\n{\n  \"id\": \"error-${seedId}-1\",\n  \"type\": \"error\",\n  \"prompt\": \"Знайди й виправ помилку (Present Simple, без крапки)\",\n  \"items\": [\n    { \"q\": \"She don't like tea.\", \"hint\": \"doesn't + V\", \"answer\": [\"she doesn't like tea\", \"she does not like tea\"] }\n  ]\n}\nВИМОГИ:\n- ${itemsCount} пунктів.\n- У кожному \"q\" повинна бути типова помилка саме з теми \"${topic}\".\n- \"answer\" — без фінальної крапки, якщо так зазначено в prompt.\n      `.trim(),\n      user: oneLineUser(topic, 'error', itemsCount),\n    },\n\n    order: {\n      system: `\n${commonRules}\nСХЕМА ВИХОДУ:\n{\n  \"id\": \"order-${seedId}-1\",\n  \"type\": \"order\",\n  \"prompt\": \"Постав слова в правильному порядку\",\n  \"items\": [\n    { \"q\": \"Впорядкуй речення\", \"tokens\": [\"she\", \"often\", \"reads\", \"books\"], \"answer\": \"she often reads books\" }\n  ]\n}\nВИМОГИ:\n- ${itemsCount} пунктів.\n- \"tokens\" мають складати саме правильну відповідь.\n- Відповідь без крапки, якщо не потрібно.\n      `.trim(),\n      user: oneLineUser(topic, 'order', itemsCount),\n    },\n\n    short: {\n      system: `\n${commonRules}\nСХЕМА ВИХОДУ:\n{\n  \"id\": \"short-${seedId}-1\",\n  \"type\": \"short\",\n  \"prompt\": \"Короткі відповіді: ${topic}\",\n  \"items\": [\n    { \"q\": \"Напиши 2–3 речення про свою щоденну рутину.\", \"keywords\": [\"i\", \"usually\", \"every\"] }\n  ]\n}\nВИМОГИ:\n- ${Math.min(\n        6,\n        Math.max(3, Math.floor(itemsCount / 2))\n      )} пунктів (короткі письмові міні-завдання).\n- Ключові слова — підказка, а не жорстка вимога.\n      `.trim(),\n      user: oneLineUser(topic, 'short', itemsCount),\n    },\n\n    writing: {\n      system: `\n${commonRules}\nСХЕМА ВИХОДУ:\n{\n  \"id\": \"writing-${seedId}-1\",\n  \"type\": \"writing\",\n  \"prompt\": \"Міні-письмо по темі ${topic}\",\n  \"description\": \"<1–2 речення з умовою>\",\n  \"checklist\": [\n    \"<критерій 1>\",\n    \"<критерій 2>\",\n    \"<критерій 3>\"\n  ]\n}\nВИМОГИ:\n- Чітка інструкція в \"description\".\n- 4–6 пунктів у \"checklist\" з конкретними критеріями перевірки.\n      `.trim(),\n      user: oneLineUser(topic, 'writing', itemsCount),\n    },\n  };\n\n  const tpl = templates[type];\n  if (!tpl) {\n    // fallback на mcq, якщо передали невідомий тип\n    return templates.mcq;\n  }\n\n  return tpl;\n}\n\n// ---- Helpers ----------------------------------------------------------------\nconst defaultItemsByType = {\n  mcq: 10,\n  gap: 10,\n  transform: 10,\n  match: 8,\n  error: 10,\n  order: 10,\n  short: 3,\n  writing: 1,\n};\n\nfunction oneLineUser(topic, type, itemsCount) {\n  return `Тема: ${topic}\\nЗгенеруй блок типу \"${type}\" з кількістю пунктів: ${itemsCount}. Поверни строго JSON за описаною схемою.`;\n}\n\nfunction shortSeed(s) {\n  return (\n    String(s || 'task')\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/^-+|-+$/g, '')\n      .slice(0, 6) || 'task'\n  );\n}\n","import { generateTask } from './api/chatGpt.js';\n\nconst adminWrapper = document.querySelector('[data-practice-admin]');\nconst form = document.querySelector('[data-practice-generator]');\nconst statusElement = form?.querySelector('[data-practice-status]');\nconst outputWrapper = document.querySelector('[data-generator-output]');\nconst jsonElement = document.querySelector('[data-generator-json]');\nconst copyButton = document.querySelector('[data-generator-copy]');\nconst downloadButton = document.querySelector('[data-generator-download]');\nconst typesContainer = form?.querySelector('[data-types]');\nconst typesTrigger = form?.querySelector('[data-types-trigger]');\nconst typesPanel = form?.querySelector('[data-types-panel]');\nconst placeholder = document.querySelector('[data-practice-placeholder]');\n\nconst defaultContext = window.lessonContext || {};\n\nlet baseTitle = defaultContext.title || 'Generated Practice';\nlet baseLevel = defaultContext.level || 'custom';\nconst baseTasks = [];\nconst generatedTasks = [];\n\nfunction hideElement(element) {\n  if (!element) return;\n  element.classList.add('hidden');\n}\n\nfunction showElement(element) {\n  if (!element) return;\n  element.classList.remove('hidden');\n}\n\nfunction isElementHidden(element) {\n  return !element || element.classList.contains('hidden');\n}\n\nfunction isGeneratorHidden() {\n  return localStorage.getItem('hideGenerateSection') === 'true';\n}\n\nfunction applyGeneratorVisibility() {\n  if (isGeneratorHidden()) {\n    hideElement(adminWrapper);\n    hideElement(typesPanel);\n    hideElement(outputWrapper);\n    closeTypesPanel();\n  } else {\n    showElement(adminWrapper);\n    updateTypesTriggerLabel();\n    updateJsonPreview();\n  }\n}\n\nfunction createTaskKey(task) {\n  const base =\n    task && typeof task === 'object' && task.id\n      ? String(task.id)\n      : String(task?.type || 'task');\n  return `${base}-${Date.now()}-${Math.random().toString(16).slice(2, 8)}`;\n}\n\nfunction buildAggregatePayload() {\n  return {\n    title: baseTitle || defaultContext.title || 'Generated Practice',\n    level: baseLevel || defaultContext.level || 'custom',\n    tasks: [...baseTasks, ...generatedTasks].map(item => item.data),\n  };\n}\n\nfunction updateJsonPreview() {\n  if (!jsonElement) return;\n\n  if (isGeneratorHidden()) {\n    hideElement(outputWrapper);\n    return;\n  }\n\n  if (!baseTasks.length && !generatedTasks.length) {\n    jsonElement.textContent = '';\n    hideElement(outputWrapper);\n    if (copyButton) copyButton.disabled = true;\n    if (downloadButton) downloadButton.disabled = true;\n    return;\n  }\n\n  jsonElement.textContent = JSON.stringify(buildAggregatePayload(), null, 2);\n  showElement(outputWrapper);\n  if (copyButton) copyButton.disabled = false;\n  if (downloadButton) downloadButton.disabled = false;\n}\n\nfunction addGeneratedTask(task) {\n  const key = createTaskKey(task);\n  generatedTasks.push({ key, data: task });\n  updateJsonPreview();\n  return key;\n}\n\nfunction removeTask(key, task) {\n  const removeFrom = list => {\n    const index = list.findIndex(\n      item => (key && item.key === key) || item.data === task\n    );\n    if (index !== -1) {\n      list.splice(index, 1);\n      return true;\n    }\n    return false;\n  };\n\n  const removed = removeFrom(generatedTasks) || removeFrom(baseTasks);\n  if (removed) {\n    updateJsonPreview();\n  }\n}\n\nfunction setInitialTopic() {\n  if (!form) return;\n  const topicInput = form.querySelector('[name=\"topic\"]');\n  if (topicInput && !topicInput.value) {\n    const initialTopic = defaultContext.title || 'Lesson topic';\n    topicInput.value = initialTopic;\n  }\n}\n\nfunction setStatus(message, state = 'idle') {\n  if (!statusElement) return;\n  statusElement.textContent = message;\n  statusElement.dataset.state = state;\n}\n\nfunction slugify(value) {\n  return String(value || '')\n    .toLowerCase()\n    .replace(/[^a-z0-9]+/g, '-')\n    .replace(/^-+|-+$/g, '')\n    .slice(0, 8);\n}\n\nfunction toFileSlug(value) {\n  return String(value || '')\n    .toLowerCase()\n    .replace(/[^a-z0-9]+/g, '-')\n    .replace(/^-+|-+$/g, '');\n}\n\nfunction getTypeInputs() {\n  return Array.from(form.querySelectorAll('input[name=\"types\"]'));\n}\n\nfunction formatTypesLabel(inputs) {\n  const selected = inputs\n    .filter(input => input.checked)\n    .map(input => input.nextElementSibling?.textContent?.trim())\n    .filter(Boolean);\n\n  if (!selected.length) return 'Оберіть типи';\n  if (selected.length <= 2) return selected.join(', ');\n  return `${selected.slice(0, 2).join(', ')} +${selected.length - 2}`;\n}\n\nfunction updateTypesTriggerLabel() {\n  if (!typesTrigger) return;\n  const inputs = getTypeInputs();\n  typesTrigger.textContent = formatTypesLabel(inputs);\n}\n\nfunction closeTypesPanel() {\n  if (!typesPanel || !typesTrigger) return;\n  if (!isElementHidden(typesPanel)) {\n    hideElement(typesPanel);\n    typesTrigger.setAttribute('aria-expanded', 'false');\n  }\n}\n\nfunction toggleTypesPanel() {\n  if (!typesPanel || !typesTrigger) return;\n  const willOpen = isElementHidden(typesPanel);\n  if (willOpen) {\n    showElement(typesPanel);\n    typesTrigger.setAttribute('aria-expanded', 'true');\n    const firstInput = typesPanel.querySelector('input[name=\"types\"]');\n    firstInput?.focus({ preventScroll: true });\n  } else {\n    closeTypesPanel();\n  }\n}\n\nfunction toggleGeneratorVisibility() {\n  const shouldHide = !isGeneratorHidden();\n  localStorage.setItem('hideGenerateSection', String(shouldHide));\n  applyGeneratorVisibility();\n  updateJsonPreview();\n}\n\nfunction clearPracticeEmptyState() {\n  const practiceRoot = document.getElementById('practice');\n  const body = practiceRoot?.querySelector('#practice-body');\n  if (placeholder) {\n    placeholder.remove();\n  }\n  if (body && body.children.length === 1) {\n    const first = body.firstElementChild;\n    if (first && /практика поки відсутня/i.test(first.textContent || '')) {\n      first.remove();\n    }\n  }\n}\n\nfunction ensurePracticeHeader() {\n  const practiceRoot = document.getElementById('practice');\n  if (!practiceRoot) return;\n  const body = practiceRoot.querySelector('#practice-body');\n  if (body && !body.querySelector('.practice-dynamic-title')) {\n    const header = document.createElement('div');\n    header.className = 'practice-dynamic-title';\n    header.innerHTML = `\n      <h2>Згенеровані завдання</h2>\n      ${\n        defaultContext.level\n          ? `<p class=\"muted\">Рівень: ${defaultContext.level}</p>`\n          : ''\n      }\n    `;\n    body.prepend(header);\n  }\n}\n\nasync function handleSubmit(event) {\n  event.preventDefault();\n  if (!form) return;\n\n  const submitButton = form.querySelector('button[type=\"submit\"]');\n  const topicInput = form.querySelector('[name=\"topic\"]');\n  const countInput = form.querySelector('[name=\"count\"]');\n  const typeInputs = getTypeInputs();\n\n  const topic = topicInput?.value?.trim();\n  const count = Number.parseInt(countInput?.value || '10', 10) || 10;\n  const selectedTypes = typeInputs\n    .filter(input => input.checked)\n    .map(input => input.value);\n\n  if (!topic) {\n    setStatus('Укажіть тему для генерації завдання.', 'error');\n    topicInput?.focus();\n    return;\n  }\n\n  if (!selectedTypes.length && typeof closeTypesPanel === 'function') {\n    setStatus('Оберіть принаймні один тип завдання.', 'error');\n    return;\n  }\n\n  const seedBase = slugify(topic) || 'task';\n  setStatus(`Генеруємо ${selectedTypes.length} тип(и) завдань…`, 'loading');\n  if (submitButton) {\n    submitButton.disabled = true;\n    submitButton.dataset.originalText =\n      submitButton.dataset.originalText || submitButton.textContent;\n    submitButton.textContent = 'Генерація…';\n  }\n\n  try {\n    const generationPromises = selectedTypes.map(type =>\n      generateTask(topic, type, {\n        items: count,\n        language: 'uk',\n        seedId: `${seedBase}-${type}`,\n      }).then(task => ({ type, task }))\n    );\n\n    const settled = await Promise.allSettled(generationPromises);\n    const successful = settled\n      .map((result, index) =>\n        result.status === 'fulfilled'\n          ? { type: selectedTypes[index], task: result.value.task }\n          : null\n      )\n      .filter(Boolean);\n    const failed = settled\n      .map((result, index) =>\n        result.status === 'rejected' ? selectedTypes[index] : null\n      )\n      .filter(Boolean);\n\n    if (!successful.length) {\n      throw new Error('Не вдалося згенерувати жодного типу завдань');\n    }\n\n    const appended = [];\n    successful.forEach(({ type, task }) => {\n      const normalizedTask = { ...task };\n      if (!normalizedTask.id) {\n        normalizedTask.id = `${type}-${seedBase}-${Date.now().toString(\n          36\n        )}${Math.random().toString(36).slice(2, 6)}`;\n      }\n      const key = addGeneratedTask(normalizedTask);\n      appended.push({ task: normalizedTask, key });\n    });\n\n    clearPracticeEmptyState();\n    if (window.practice && typeof window.practice.appendTask === 'function') {\n      ensurePracticeHeader();\n      appended.forEach(({ task: generatedTask, key }) => {\n        window.practice.appendTask(generatedTask, { key });\n      });\n    }\n\n    closeTypesPanel();\n\n    const successTypes = successful.map(({ type }) => type).join(', ');\n    if (failed.length) {\n      setStatus(\n        `Згенеровано: ${successTypes}. Помилки: ${failed.join(', ')}`,\n        'success'\n      );\n    } else {\n      setStatus(\n        `Готово! Додано ${successful.length} блок(и): ${successTypes}.`,\n        'success'\n      );\n    }\n  } catch (error) {\n    console.error(error);\n    const message =\n      error instanceof Error && error.message\n        ? `Помилка: ${error.message}`\n        : 'Не вдалося згенерувати завдання. Перевірте токен або спробуйте ще раз.';\n    setStatus(message, 'error');\n  } finally {\n    if (submitButton) {\n      const original =\n        submitButton.dataset.originalText || 'Згенерувати завдання';\n      submitButton.disabled = false;\n      submitButton.textContent = original;\n    }\n  }\n}\n\nasync function handleCopy() {\n  if (!jsonElement) return;\n  const content = jsonElement.textContent;\n  if (!content) return;\n  try {\n    await navigator.clipboard.writeText(content);\n    setStatus('JSON скопійовано у буфер.', 'success');\n  } catch (error) {\n    console.error(error);\n    setStatus('Не вдалося скопіювати JSON. Спробуйте вручну.', 'error');\n  }\n}\n\nfunction getDownloadFilename(payload) {\n  const base =\n    toFileSlug(defaultContext.id) ||\n    toFileSlug(payload.title) ||\n    toFileSlug(defaultContext.title) ||\n    'practice';\n  return `${base || 'practice'}.json`;\n}\n\nasync function handleDownload() {\n  const payload = buildAggregatePayload();\n  const content = JSON.stringify(payload, null, 2);\n  if (!content || content === '{}' || content === '[]') {\n    setStatus('Немає даних для завантаження.', 'error');\n    return;\n  }\n\n  try {\n    const blob = new Blob([content], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    anchor.href = url;\n    anchor.download = getDownloadFilename(payload);\n    document.body.appendChild(anchor);\n    anchor.click();\n    document.body.removeChild(anchor);\n    URL.revokeObjectURL(url);\n    setStatus('Файл завантажено.', 'success');\n  } catch (error) {\n    console.error(error);\n    setStatus('Не вдалося завантажити файл.', 'error');\n  }\n}\n\nfunction init() {\n  if (!form) return;\n  setInitialTopic();\n  form.addEventListener('submit', handleSubmit);\n  if (copyButton) {\n    copyButton.addEventListener('click', handleCopy);\n    copyButton.disabled = true;\n  }\n  if (downloadButton) {\n    downloadButton.addEventListener('click', handleDownload);\n    downloadButton.disabled = true;\n  }\n\n  if (typesTrigger && typesPanel && typesContainer) {\n    typesTrigger.setAttribute('aria-haspopup', 'true');\n    typesTrigger.setAttribute('aria-expanded', 'false');\n    typesTrigger.addEventListener('click', () => {\n      toggleTypesPanel();\n    });\n\n    const handlePointerDown = event => {\n      if (!typesContainer.contains(event.target)) {\n        closeTypesPanel();\n      }\n    };\n\n    document.addEventListener('pointerdown', handlePointerDown);\n\n    const handleFocusOut = event => {\n      const next = event.relatedTarget;\n      if (!next || !typesContainer.contains(next)) {\n        closeTypesPanel();\n      }\n    };\n\n    typesContainer.addEventListener('focusout', handleFocusOut);\n\n    document.addEventListener('keydown', event => {\n      if (event.key === 'Escape') {\n        closeTypesPanel();\n        typesTrigger.focus();\n      }\n    });\n\n    getTypeInputs().forEach(input => {\n      input.addEventListener('change', () => {\n        updateTypesTriggerLabel();\n      });\n    });\n    updateTypesTriggerLabel();\n\n    form.addEventListener('submit', () => {\n      closeTypesPanel();\n    });\n  }\n\n  document.addEventListener('practice:taskRemoved', event => {\n    const detail = event.detail || {};\n    removeTask(detail.key, detail.task);\n  });\n\n  document.addEventListener('practice:dataLoaded', event => {\n    const detail = event.detail;\n    baseTasks.length = 0;\n    if (detail && Array.isArray(detail.entries)) {\n      baseTitle = detail.title ?? baseTitle;\n      baseLevel = detail.level ?? baseLevel;\n      detail.entries.forEach(({ task, key }) => {\n        const entryKey = key || createTaskKey(task);\n        baseTasks.push({ key: entryKey, data: task });\n      });\n    } else if (detail && Array.isArray(detail.tasks)) {\n      baseTitle = detail.title ?? baseTitle;\n      baseLevel = detail.level ?? baseLevel;\n      detail.tasks.forEach(task => {\n        const entryKey =\n          task && task.id ? String(task.id) : createTaskKey(task);\n        baseTasks.push({ key: entryKey, data: task });\n      });\n    } else {\n      if (!detail) {\n        baseTitle = defaultContext.title || baseTitle;\n        baseLevel = defaultContext.level || baseLevel;\n      } else {\n        baseTitle = detail.title ?? baseTitle;\n        baseLevel = detail.level ?? baseLevel;\n      }\n    }\n    updateJsonPreview();\n    applyGeneratorVisibility();\n  });\n\n  applyGeneratorVisibility();\n  updateJsonPreview();\n\n  document.addEventListener('keydown', event => {\n    if (\n      event.code &&\n      event.code === 'KeyH' &&\n      event.ctrlKey &&\n      event.shiftKey\n    ) {\n      event.preventDefault();\n      toggleGeneratorVisibility();\n    }\n  });\n}\n\ninit();\n"],"names":["basePath","__vite_import_meta_env__","resolveAssetPath","path","normalizedBase","rawPath","params","topicId","fallbackTitle","fallbackCategory","fallbackLevel","fallbackFile","lesson","lessons","item","resolvedTitle","resolvedCategory","resolvedLevel","resolvedFile","candidate","titleElement","categoryElement","levelElement","statusElement","contentElement","setCurrentYear","yearEl","renderMeta","categoryText","_a","lessonCategories","loadLesson","response","markup","error","init","getAnswer","body","url","res","generateTask","topic","typeQuestion","opts","promptBody","buildBody","raw","jsonMatch","token","model","normalizedType","system","user","makeMessages","type","itemsCount","defaultItemsByType","seedId","shortSeed","commonRules","templates","oneLineUser","tpl","s","adminWrapper","form","outputWrapper","jsonElement","copyButton","downloadButton","typesContainer","typesTrigger","typesPanel","placeholder","defaultContext","baseTitle","baseLevel","baseTasks","generatedTasks","hideElement","element","showElement","isElementHidden","isGeneratorHidden","applyGeneratorVisibility","closeTypesPanel","updateTypesTriggerLabel","updateJsonPreview","createTaskKey","task","buildAggregatePayload","addGeneratedTask","key","removeTask","removeFrom","list","index","setInitialTopic","topicInput","initialTopic","setStatus","message","state","slugify","value","toFileSlug","getTypeInputs","formatTypesLabel","inputs","selected","input","_b","toggleTypesPanel","firstInput","toggleGeneratorVisibility","shouldHide","clearPracticeEmptyState","practiceRoot","first","ensurePracticeHeader","header","handleSubmit","event","submitButton","countInput","typeInputs","count","selectedTypes","seedBase","generationPromises","settled","successful","result","failed","appended","normalizedTask","generatedTask","successTypes","original","handleCopy","content","getDownloadFilename","payload","handleDownload","blob","anchor","handlePointerDown","handleFocusOut","next","detail","entryKey"],"mappings":"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"}