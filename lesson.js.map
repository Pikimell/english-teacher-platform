{"version":3,"mappings":"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","names":["communicationWordLoaders","__vitePreload","basePath","__vite_import_meta_env__","resolveAssetPath","path","normalizedBase","rawPath","params","topicId","customLessonId","fallbackTitle","fallbackCategory","fallbackLevel","fallbackFile","lesson","lessons","item","customLesson","candidates","customLessonPresets","preset","topicIds","loadCustomLessons","isCustomLesson","resolvedTitle","resolvedCategory","resolvedLevel","topics","id","resolvedFile","candidate","titleElement","categoryElement","levelElement","statusElement","contentElement","setCurrentYear","yearEl","renderMeta","categoryText","_a","lessonCategories","practiceTitleElement","makeTopicAnchorId","rawId","createSummaryList","wrapper","heading","list","topic","categoryLabel","anchorId","link","title","meta","event","target","fetchPracticeDataForTopic","normalized","segments","last","response","payload","error","renderEmptyPracticeState","container","note","renderCustomLesson","intro","categoryOrder","orderedTopics","a","b","orderA","orderB","summary","section","sectionAnchorId","header","body","markup","practiceWrapper","practiceData","practiceApi","level","hydrateCommunicationWords","loadLesson","renderCommunicationTable","entries","words","table","thead","headRow","label","th","tbody","row","wordCell","translationCell","exampleCell","root","placeholders","placeholder","moduleName","loader","module","init","getAnswer","url","res","generateTask","typeQuestion","opts","vocabulary","promptBody","buildBody","raw","jsonMatch","token","model","normalizedType","system","user","makeMessages","userWithVocabulary","appendVocabularyToPrompt","type","itemsCount","defaultItemsByType","seedId","shortSeed","commonRules","templates","oneLineUser","tpl","s","userContent","trimmed","formattedList","formatVocabularyList","lines","entry","index","word","translation","example","line","adminWrapper","form","outputWrapper","jsonElement","copyButton","downloadButton","typesContainer","typesTrigger","typesPanel","defaultContext","baseTitle","baseLevel","baseTasks","generatedTasks","hideElement","element","showElement","isElementHidden","isGeneratorHidden","applyGeneratorVisibility","closeTypesPanel","updateTypesTriggerLabel","updateJsonPreview","createTaskKey","task","buildAggregatePayload","addGeneratedTask","key","removeTask","removeFrom","setInitialTopic","topicInput","initialTopic","setStatus","message","state","slugify","value","toFileSlug","getTypeInputs","formatTypesLabel","inputs","selected","input","_b","toggleTypesPanel","firstInput","toggleGeneratorVisibility","shouldHide","clearPracticeEmptyState","practiceRoot","first","ensurePracticeHeader","handleSubmit","submitButton","countInput","typeInputs","count","selectedTypes","seedBase","generationPromises","settled","successful","result","failed","appended","normalizedTask","generatedTask","successTypes","original","handleCopy","content","getDownloadFilename","handleDownload","blob","anchor","handlePointerDown","handleFocusOut","next","detail","entryKey"],"ignoreList":[],"sources":["../src/scripts/lesson.js","../src/scripts/api/chatGpt.js","../src/scripts/practice-generator.js"],"sourcesContent":["import { lessons, lessonCategories } from '../data/lessons.js';\nimport { customLessonPresets } from '../data/custom-lesson-presets.js';\nimport { loadCustomLessons } from './custom-lessons-store.js';\n\nconst communicationWordLoaders = {\n  body: () => import('../public/scripts/communication/words/body.js'),\n  'small-talk': () => import('../public/scripts/communication/words/smallTalk.js'),\n  'problem-solving': () => import('../public/scripts/communication/words/problemSolving.js'),\n  feedback: () => import('../public/scripts/communication/words/feedback.js'),\n};\n\nconst basePath = (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.BASE_URL) || '/';\n\nfunction resolveAssetPath(path) {\n  const normalizedBase = basePath.endsWith('/') ? basePath : `${basePath}/`;\n  const rawPath = String(path || '');\n  if (rawPath.startsWith(normalizedBase)) return rawPath;\n  return `${normalizedBase}${rawPath.replace(/^\\/+/, '')}`;\n}\n\nconst params = new URLSearchParams(window.location.search);\nconst topicId = params.get('topic');\nconst customLessonId = params.get('custom');\nconst fallbackTitle = params.get('title');\nconst fallbackCategory = params.get('category');\nconst fallbackLevel = params.get('level');\nconst fallbackFile = params.get('file');\n\nconst lesson = topicId ? lessons.find((item) => item.id === topicId) : undefined;\nconst customLesson = (() => {\n  if (!customLessonId) return null;\n  const candidates = [];\n  if (Array.isArray(customLessonPresets)) {\n    customLessonPresets.forEach((preset) => {\n      if (!preset || typeof preset !== 'object') return;\n      const topicIds = Array.isArray(preset.topicIds) ? [...preset.topicIds] : [];\n      if (!preset.id || !topicIds.length) return;\n      candidates.push({\n        ...preset,\n        topicIds,\n        source: 'preset',\n      });\n    });\n  }\n  loadCustomLessons()\n    .filter((item) => item && typeof item === 'object')\n    .forEach((item) => {\n      const topicIds = Array.isArray(item.topicIds) ? [...item.topicIds] : [];\n      if (!item.id || !topicIds.length) return;\n      candidates.push({\n        ...item,\n        topicIds,\n        source: 'local',\n      });\n    });\n  return candidates.find((item) => item.id === customLessonId) ?? null;\n})();\n\nconst isCustomLesson = Boolean(customLesson);\n\nconst resolvedTitle = (() => {\n  if (isCustomLesson) return customLesson.title;\n  if (lesson?.title) return lesson.title;\n  return fallbackTitle ? decodeURIComponent(fallbackTitle) : 'Матеріал уроку';\n})();\n\nconst resolvedCategory = (() => {\n  if (isCustomLesson) return 'custom';\n  if (lesson?.category) return lesson.category;\n  return fallbackCategory ? decodeURIComponent(fallbackCategory) : '';\n})();\n\nconst resolvedLevel = (() => {\n  if (isCustomLesson) {\n    if (customLesson.level) return customLesson.level;\n    const topics = (customLesson.topicIds || [])\n      .map((id) => lessons.find((item) => item.id === id))\n      .filter(Boolean);\n    const uniqueLevels = Array.from(new Set(topics.map((item) => item.level))).sort();\n    return uniqueLevels.join(', ');\n  }\n  if (lesson?.level) return lesson.level;\n  return fallbackLevel ? decodeURIComponent(fallbackLevel) : '';\n})();\n\nconst resolvedFile = (() => {\n  if (isCustomLesson) return null;\n  const candidate = lesson?.htmlPath ?? (fallbackFile ? decodeURIComponent(fallbackFile) : null);\n  if (!candidate) return null;\n  return candidate.startsWith('lessons/') ? candidate : null;\n})();\n\nwindow.lessonContext = {\n  id: isCustomLesson ? customLesson.id : lesson?.id ?? topicId ?? null,\n  title: resolvedTitle,\n  category: resolvedCategory,\n  level: resolvedLevel,\n  htmlPath: resolvedFile,\n  source: isCustomLesson ? customLesson.source || 'custom' : 'catalog',\n  topicIds: isCustomLesson\n    ? [...(customLesson.topicIds || [])]\n    : lesson?.id\n      ? [lesson.id]\n      : topicId\n        ? [topicId]\n        : [],\n  isCustomLesson,\n};\n\nconst titleElement = document.querySelector('[data-lesson-title]');\nconst categoryElement = document.querySelector('[data-lesson-category]');\nconst levelElement = document.querySelector('[data-lesson-level]');\nconst statusElement = document.querySelector('[data-lesson-status]');\nconst contentElement = document.getElementById('lesson-content');\n\nfunction setCurrentYear() {\n  const yearEl = document.querySelector('[data-component=\"copyright-year\"]');\n  if (!yearEl) return;\n  yearEl.textContent = String(new Date().getFullYear());\n}\n\nfunction renderMeta() {\n  if (titleElement) titleElement.textContent = resolvedTitle;\n  const categoryLabel = (() => {\n    if (isCustomLesson) return 'Комбінований урок';\n    return lessonCategories[resolvedCategory]?.label ?? '';\n  })();\n  const categoryText = categoryLabel || resolvedCategory;\n  if (categoryElement) {\n    categoryElement.textContent = categoryText || '';\n  }\n  if (levelElement) {\n    levelElement.textContent = resolvedLevel ? `Рівень: ${resolvedLevel}` : '';\n  }\n  const practiceTitleElement = document.getElementById('practice-title');\n  if (practiceTitleElement) {\n    practiceTitleElement.textContent = resolvedTitle;\n  }\n  document.title = `${resolvedTitle} | English Teacher Platform`;\n}\n\nfunction makeTopicAnchorId(rawId) {\n  const sanitized = String(rawId || '')\n    .trim()\n    .toLowerCase()\n    .replace(/[^a-z0-9_-]+/g, '-')\n    .replace(/^-+|-+$/g, '') || 'topic';\n  return `lesson-topic-${sanitized}`;\n}\n\nfunction createSummaryList(topics) {\n  if (!topics.length) return null;\n  const wrapper = document.createElement('section');\n  wrapper.className = 'lesson-custom-summary';\n\n  const heading = document.createElement('h2');\n  heading.textContent = 'Склад уроку';\n  wrapper.appendChild(heading);\n\n  const list = document.createElement('ul');\n  list.className = 'lesson-custom-summary__list';\n\n  topics.forEach((topic) => {\n    const item = document.createElement('li');\n    item.className = 'lesson-custom-summary__item';\n    const categoryLabel = lessonCategories[topic.category]?.label ?? topic.category;\n    const anchorId = makeTopicAnchorId(topic.id);\n    const link = document.createElement('a');\n    link.className = 'lesson-custom-summary__link';\n    link.href = `#${anchorId}`;\n    link.dataset.topicAnchor = anchorId;\n\n    const title = document.createElement('strong');\n    title.textContent = topic.title;\n    const meta = document.createElement('span');\n    meta.textContent = `${categoryLabel} · ${topic.level}`;\n\n    link.appendChild(title);\n    link.appendChild(meta);\n    link.addEventListener('click', (event) => {\n      const target = document.getElementById(anchorId);\n      if (!target) return;\n      event.preventDefault();\n      target.scrollIntoView({ behavior: 'smooth', block: 'start' });\n      requestAnimationFrame(() => {\n        try {\n          target.focus({ preventScroll: true });\n        } catch (error) {\n          target.focus();\n        }\n      });\n    });\n\n    item.appendChild(link);\n    list.appendChild(item);\n  });\n\n  wrapper.appendChild(list);\n  return wrapper;\n}\n\nasync function fetchPracticeDataForTopic(topic) {\n  if (!topic) return null;\n  const candidates = new Set();\n  if (topic.id) {\n    candidates.add(`data/practice/${topic.id}.json`);\n  }\n\n  if (topic.htmlPath) {\n    const normalized = String(topic.htmlPath)\n      .replace(/^\\.?\\/?/, '')\n      .replace(/\\.html?$/i, '');\n    if (normalized) {\n      candidates.add(`data/practice/${normalized}.json`);\n      const segments = normalized.split('/');\n      const last = segments[segments.length - 1];\n      if (last) {\n        candidates.add(`data/practice/${last}.json`);\n      }\n    }\n  }\n\n  for (const path of candidates) {\n    try {\n      const response = await fetch(resolveAssetPath(path), { cache: 'no-store' });\n      if (!response.ok) continue;\n      const payload = await response.json();\n      if (payload && Array.isArray(payload.tasks) && payload.tasks.length) {\n        return payload;\n      }\n    } catch (error) {\n      console.warn(`Не вдалося завантажити практику за шляхом ${path}`, error);\n    }\n  }\n\n  return null;\n}\n\nfunction renderEmptyPracticeState(container) {\n  if (!container) return;\n  const note = document.createElement('p');\n  note.className = 'practice-inline__empty muted';\n  note.textContent = 'Практика для цієї теми поки відсутня.';\n  container.appendChild(note);\n}\n\nasync function renderCustomLesson() {\n  if (!contentElement) return;\n\n  const topics = (customLesson?.topicIds || [])\n    .map((id) => lessons.find((item) => item.id === id))\n    .filter(Boolean);\n\n  if (!topics.length) {\n    if (statusElement) {\n      statusElement.textContent = 'Не вдалося знайти вибрані теми. Створіть урок заново.';\n    }\n    return;\n  }\n\n  contentElement.innerHTML = '';\n\n  if (customLesson?.description) {\n    const intro = document.createElement('p');\n    intro.className = 'lesson-custom-description';\n    intro.textContent = customLesson.description;\n    contentElement.appendChild(intro);\n  }\n\n  const categoryOrder = {\n    communication: 0,\n    grammar: 1,\n    quick: 2,\n  };\n\n  const orderedTopics = topics.slice().sort((a, b) => {\n    const orderA = categoryOrder[a.category] ?? 99;\n    const orderB = categoryOrder[b.category] ?? 99;\n    if (orderA !== orderB) return orderA - orderB;\n    return 0;\n  });\n\n  const summary = createSummaryList(orderedTopics);\n  if (summary) {\n    contentElement.appendChild(summary);\n  }\n\n  for (const topic of orderedTopics) {\n    const section = document.createElement('section');\n    section.className = 'lesson-topic';\n    section.dataset.topicId = topic.id;\n    const sectionAnchorId = makeTopicAnchorId(topic.id);\n    section.id = sectionAnchorId;\n    section.setAttribute('tabindex', '-1');\n\n    const header = document.createElement('header');\n    header.className = 'lesson-topic__header';\n\n    const title = document.createElement('h3');\n    title.className = 'lesson-topic__title';\n    title.textContent = topic.title;\n    header.appendChild(title);\n\n    const meta = document.createElement('p');\n    meta.className = 'lesson-topic__meta';\n    const categoryLabel = lessonCategories[topic.category]?.label ?? topic.category;\n    meta.textContent = `${categoryLabel} · Рівень ${topic.level}`;\n    header.appendChild(meta);\n\n    section.appendChild(header);\n\n    const body = document.createElement('div');\n    body.className = 'lesson-topic__body';\n    section.appendChild(body);\n\n    contentElement.appendChild(section);\n\n    try {\n      const response = await fetch(resolveAssetPath(topic.htmlPath));\n      if (!response.ok) {\n        throw new Error(`Не вдалося завантажити файл: ${response.status}`);\n      }\n      const markup = await response.text();\n      body.innerHTML = markup;\n    } catch (error) {\n      body.innerHTML = '<p class=\"lesson-topic__error\">Не вдалося завантажити матеріал цієї теми.</p>';\n      console.error(error);\n    }\n\n    const practiceWrapper = document.createElement('div');\n    practiceWrapper.className = 'lesson-topic__practice';\n    section.appendChild(practiceWrapper);\n\n    try {\n      const practiceData = await fetchPracticeDataForTopic(topic);\n      if (practiceData && Array.isArray(practiceData.tasks) && practiceData.tasks.length) {\n        const practiceApi = window.practice || {};\n        const heading = practiceData.title ? `Практика: ${practiceData.title}` : `Практика: ${topic.title}`;\n        const level = practiceData.level || topic.level || '';\n        if (typeof practiceApi.renderTaskList === 'function') {\n          practiceApi.renderTaskList(practiceWrapper, practiceData.tasks, {\n            title: heading,\n            level,\n            description: practiceData.description,\n            keyPrefix: `${topic.id}-practice`,\n          });\n        } else {\n          renderEmptyPracticeState(practiceWrapper);\n        }\n      } else {\n        renderEmptyPracticeState(practiceWrapper);\n      }\n    } catch (error) {\n      console.error('Помилка під час завантаження практики', error);\n      renderEmptyPracticeState(practiceWrapper);\n    }\n  }\n\n  if (statusElement) {\n    statusElement.remove();\n  }\n\n  await hydrateCommunicationWords(contentElement);\n}\n\nasync function loadLesson() {\n  if (!contentElement) return;\n\n  if (isCustomLesson) {\n    await renderCustomLesson();\n    return;\n  }\n\n  if (!resolvedFile) {\n    if (statusElement) {\n      statusElement.textContent = 'Не вдалося визначити файл з матеріалом. Перейдіть назад та оберіть тему зі списку.';\n    }\n    return;\n  }\n\n  try {\n    const response = await fetch(resolveAssetPath(resolvedFile));\n    if (!response.ok) {\n      throw new Error(`Не вдалося завантажити файл: ${response.status}`);\n    }\n    const markup = await response.text();\n    contentElement.innerHTML = markup;\n    await hydrateCommunicationWords(contentElement);\n  } catch (error) {\n    if (statusElement) {\n      statusElement.textContent = 'Сталася помилка під час завантаження матеріалу. Спробуйте пізніше або поверніться до каталогу.';\n    }\n    console.error(error);\n  }\n}\n\nfunction renderCommunicationTable(container, entries) {\n  if (!container) return;\n  const words = Array.isArray(entries) ? entries : [];\n  if (!words.length) return;\n\n  container.classList.add('communication__table');\n\n  const table = document.createElement('table');\n\n  const thead = document.createElement('thead');\n  const headRow = document.createElement('tr');\n  ['Слово', 'Переклад', 'Приклад'].forEach((label) => {\n    const th = document.createElement('th');\n    th.textContent = label;\n    headRow.appendChild(th);\n  });\n  thead.appendChild(headRow);\n\n  const tbody = document.createElement('tbody');\n  words.forEach((item) => {\n    if (!item) return;\n    const row = document.createElement('tr');\n\n    const wordCell = document.createElement('td');\n    wordCell.textContent = item.word || item.term || '';\n\n    const translationCell = document.createElement('td');\n    translationCell.textContent = item.translation || item.meaning || '';\n\n    const exampleCell = document.createElement('td');\n    exampleCell.textContent = item.example || item.sentence || '';\n\n    row.appendChild(wordCell);\n    row.appendChild(translationCell);\n    row.appendChild(exampleCell);\n    tbody.appendChild(row);\n  });\n\n  table.appendChild(thead);\n  table.appendChild(tbody);\n\n  container.innerHTML = '';\n  container.appendChild(table);\n}\n\nasync function hydrateCommunicationWords(root) {\n  if (!root) return;\n  const placeholders = root.querySelectorAll('[data-communication-words]');\n  if (!placeholders.length) return;\n\n  window.communicationVocabularyMap = window.communicationVocabularyMap || {};\n\n  for (const placeholder of placeholders) {\n    const moduleName = placeholder.getAttribute('data-module');\n    if (!moduleName) continue;\n    const loader = communicationWordLoaders[moduleName];\n    if (typeof loader !== 'function') continue;\n    try {\n      const module = await loader();\n      const words = module?.default || module?.words || [];\n      if (!Array.isArray(words) || !words.length) continue;\n\n      window.communicationVocabularyMap[moduleName] = words;\n      window.communicationCurrentWords = words;\n\n      renderCommunicationTable(placeholder, words);\n    } catch (error) {\n      console.error(`Не вдалося завантажити слова для модуля \"${moduleName}\"`, error);\n    }\n  }\n}\n\nfunction init() {\n  setCurrentYear();\n  renderMeta();\n  loadLesson();\n}\n\ninit();\n","// tasksGenerator.js\n\n// ---- HTTP wrapper -----------------------------------------------------------\nexport const getAnswer = async body => {\n  const BASE_URL = 'https://vq1wtq2d2l.execute-api.us-east-2.amazonaws.com/dev';\n  // const BASE_URL = \"http://localhost:3000/dev\";\n  const url = BASE_URL + '/openai';\n\n  const response = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: { 'Content-Type': 'application/json' },\n  }).then(res => res.json());\n\n  return response; // your endpoint returns a JSON string -> we'll JSON.parse later\n};\n\n// ---- Public API -------------------------------------------------------------\n/**\n * Генерує один блок завдання під конкретний typeQuestion (mcq/gap/...)\n * @param {string} topic - наприклад: \"Present Simple\"\n * @param {string} typeQuestion - один з: mcq, gap, transform, match, error, order, short, writing, roleplay, context, dialogue-gap, dialogue-order, truefalse, definition-match, synonym-clue, scramble, wordpairs, odd-one-out\n * @param {object} opts - { language: 'en', items: 10, seedId: 'ps' } etc.\n * @param {Array<object>} vocabulary - опційний масив слів для фокусування ({ word, translation, example })\n * @returns {Promise<object>} JSON блоку завдання\n */\nexport const generateTask = async (topic, typeQuestion, opts = {}, vocabulary = []) => {\n  const promptBody = buildBody(topic, typeQuestion, opts, vocabulary);\n  const raw = await getAnswer(promptBody);\n\n  // API зазвичай повертає строку JSON -> парсимо.\n  // Якщо вже об'єкт — просто повернемо як є.\n  try {\n    if (typeof raw === 'string') return JSON.parse(raw);\n    return raw;\n  } catch (e) {\n    // На випадок якщо модель вивела щось зайве — спроба витягнути JSON через regex\n    const jsonMatch =\n      typeof raw === 'string' ? raw.match(/\\{[\\s\\S]*\\}$/) : null;\n    if (jsonMatch) return JSON.parse(jsonMatch[0]);\n    throw new Error('Не вдалося розпарсити JSON відповіді моделі');\n  }\n};\n\n/**\n * Генерує HTML-розмітку теоретичного матеріалу (таблиці з правилами та прикладами)\n * @param {string} topic - назва теми (наприклад: \"Present Simple\")\n * @param {object} opts - { language: 'uk' | 'en' }\n * @returns {Promise<string>} HTML-фрагмент з <table> блоками\n */\nexport const generateTheory = async (topic, opts = {}) => {\n  const body = buildTheoryBody(topic, opts);\n  const raw = await getAnswer(body);\n  // Очікуємо чистий HTML-фрагмент (рядок). Якщо об'єкт — дістанемо content\n  if (typeof raw === 'string') return raw;\n  if (raw && typeof raw.content === 'string') return raw.content;\n  // Спроба видобути HTML між першими <table ...> ... (на випадок зайвого тексту)\n  const m = String(raw || '').match(/<table[\\s\\S]*<\\/table>/i);\n  if (m) return m[0];\n  throw new Error('Відповідь не містить HTML');\n};\n\n// ---- Prompt builder ---------------------------------------------------------\nfunction buildBody(topic, typeQuestion, opts = {}, vocabulary = []) {\n  const token = localStorage.getItem('gptToken');\n  if (!token || token?.length < 10) {\n    console.warn('⚠️ gptToken відсутній у localStorage');\n    const token = prompt('Enter Your GPT Token');\n    localStorage.setItem('gptToken', token);\n  }\n\n  const model = 'gpt-4o-mini';\n  const normalizedType = String(typeQuestion || '')\n    .trim()\n    .toLowerCase();\n\n  const { system, user } = makeMessages(topic, normalizedType, opts);\n  const userWithVocabulary = appendVocabularyToPrompt(user, vocabulary);\n\n  return {\n    token,\n    model,\n    messages: [\n      { role: 'system', content: system },\n      { role: 'user', content: userWithVocabulary },\n    ],\n    temperature: 0.3,\n    max_tokens: 4000,\n  };\n}\n\nfunction buildTheoryBody(topic, opts = {}) {\n  let token = localStorage.getItem('gptToken');\n  if (!token || token?.length < 10) {\n    console.warn('⚠️ gptToken відсутній у localStorage');\n    token = prompt('Enter Your GPT Token');\n    if (token) localStorage.setItem('gptToken', token);\n  }\n  const model = 'gpt-4o-mini';\n  const lang = (opts.language || 'uk').toLowerCase();\n\n  const system = `You are an ESL (English as a Second Language) content generator.  \nCreate a **detailed study guide in HTML tables** for the following grammar/vocabulary topic:\n\nTOPIC: ${topic}\nLEVEL: A1-C2\nLANGUAGE OF EXPLANATION: English\nACCENT_COLOR: #00837f\n\nREQUIREMENTS:\n1. Output only valid HTML <table> structures (border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:100%\").  \n2. Use clear headers inside tables with <span style=\"color: #00837f\"><strong>…</strong></span>.  \n3. Highlight key grammar points in <strong>bold</strong>.  \n4. Use examples in simple everyday vocabulary, 1–2 per point.  \n5. You may generate ANY number of tables depending on how much detail the topic requires.  \n6. Tables should cover different aspects such as:\n   - Forms (affirmative, negative, questions)  \n   - Usage (rules, functions, signal words, time markers)  \n   - Common mistakes (\"Use it right!\")  \n   - Exceptions/irregularities/special cases  \n   - Practical examples or mini-dialogues  \n   - Vocabulary lists (if relevant to the topic)  \n   - Comparison with similar grammar points (if relevant)  \n7. Make the content structured like a mini-textbook chapter:  \n   - Start with a table that introduces the main concept and its basic forms.  \n   - Add extra tables for usage, examples, pitfalls, exceptions, etc.  \n   - End with a summary/revision table.  \n8. Keep everything inside tables, do NOT output free text outside tables.  \n\nGOAL:\nProduce a **ready-to-use study guide** in HTML tables, so that learners can read it as a digital textbook.  \nBe as detailed as possible, but keep the language simple and level-appropriate.  `;\n\n  const user = `Generate the full HTML tables for topic: ${topic}.`;\n\n  return {\n    token,\n    model,\n    messages: [\n      { role: 'system', content: system },\n      { role: 'user', content: user },\n    ],\n    temperature: 0.4,\n    max_tokens: 16384,\n  };\n}\n\n// ---- Templates: system + user by task type ---------------------------------\n\n/**\n * Кожен тип завдання має:\n * - коротку інструкцію (що генеруємо, які поля)\n * - приклад (few-shot) у system\n * - суворі вимоги: лише JSON, українська, без крапок у відповідях де потрібно тощо\n */\nfunction makeMessages(topic, type, opts) {\n  const lang = opts.language || 'en';\n  const itemsCount = Number.isInteger(opts.items)\n    ? opts.items\n    : defaultItemsByType[type] || 10;\n  const seedId = opts.seedId || shortSeed(topic);\n\n  const commonRules = `\nYOU ARE an ESL task generator.\nGOAL: create ONE task block of type \"${type}\" on the topic \"${topic}\".\nOUTPUT ONLY VALID JSON. Keep the language level around A1–A2.\nAll prompts, questions, answers, hints, and labels must be written in ENGLISH.\nEncoding — UTF-8. No explanations, no prefixes, no code fences.\nEnsure internal consistency so answers match the task logic.\n`;\n\n  const templates = {\n    mcq: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"mcq-${seedId}-1\",\n  \"type\": \"mcq\",\n  \"prompt\": \"Choose the correct option.\",\n  \"items\": [\n    {\n      \"q\": \"<short question with one missing form>\",\n      \"choices\": [\"<option0>\", \"<option1>\", \"<option2>\"],\n      \"answer\": [\"<index_of_correct_choice_as_string>\"]\n    },\n    ...\n  ]\n}\n\nREQUIREMENTS:\n- ${itemsCount} items.\n- Follow the schema exactly.\n- Provide exactly 3 answer choices per question with a single correct one.\n- \"answer\" must be the index of the correct option as a string: \"0\" | \"1\" | \"2\".\n- Keep questions natural, concise, and on the topic \"${topic}\".\n- Return JSON only, no additional commentary.\n\nEXAMPLE (FORMAT ONLY; DO NOT COPY CONTENT):\n{\n  \"id\": \"mcq-ps-1\",\n  \"type\": \"mcq\",\n  \"prompt\": \"Choose the correct Present Simple form.\",\n  \"items\": [\n    { \"q\": \"He usually ___ the bus to work.\", \"choices\": [\"take\", \"takes\", \"is taking\"], \"answer\": [\"1\"] },\n    { \"q\": \"They ___ coffee in the morning.\", \"choices\": [\"have\", \"haves\", \"are having\"], \"answer\": [\"0\"] }\n  ]\n}\n      `.trim(),\n      user: `\nTopic: ${topic}\nGenerate a task block of type \"mcq\" strictly following the OUTPUT SCHEMA.\nNumber of items: ${itemsCount}.\n      `.trim(),\n    },\n\n    gap: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"gap-${seedId}-1\",\n  \"type\": \"gap\",\n  \"prompt\": \"Fill the gaps with the correct word.\",\n  \"items\": [\n    { \"q\": \"<They ___ (work) on Sundays.>\", \"answer\": [\"<correct_form>\", \"<alternative_if_any>\"] },\n    ...\n  ]\n}\nREQUIREMENTS:\n- ${itemsCount} sentences.\n- \"answer\" must always be an array with at least one valid solution in lowercase.\n- Keep sentences short, level A1–A2, and connected to \"${topic}\".\n      `.trim(),\n      user: oneLineUser(topic, 'gap', itemsCount),\n    },\n\n    transform: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"transform-${seedId}-1\",\n  \"type\": \"transform\",\n  \"prompt\": \"Rewrite each sentence in the negative form (no final period).\",\n  \"items\": [\n    {\n      \"q\": \"She likes coffee.\",\n      \"hint\": \"use doesn't + base verb; no period\",\n      \"answer\": [\"she doesn't like coffee\", \"she does not like coffee\"]\n    }\n  ]\n}\nREQUIREMENTS:\n- ${itemsCount} items.\n- Answers must follow the prompt instructions (for example, omit the final period).\n- Provide a helpful English hint for each item.\n      `.trim(),\n      user: oneLineUser(topic, 'transform', itemsCount),\n    },\n\n    match: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"match-${seedId}-1\",\n  \"type\": \"match\",\n  \"prompt\": \"Match the base verb with the third person singular form (he/she/it).\",\n  \"pairs\": [\n    { \"left\": \"go\", \"right\": \"goes\" },\n    ...\n  ]\n}\nREQUIREMENTS:\n- ${Math.max(6, Math.min(12, itemsCount))} unique pairs.\n- Provide one clear correct match for each pair without duplicates.\n- Use vocabulary related to \"${topic}\".\n      `.trim(),\n      user: oneLineUser(topic, 'match', itemsCount),\n    },\n\n    error: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"error-${seedId}-1\",\n  \"type\": \"error\",\n  \"prompt\": \"Find and correct the mistake (Present Simple, no final period).\",\n  \"items\": [\n    { \"q\": \"She don't like tea.\", \"hint\": \"use doesn't + base verb\", \"answer\": [\"she doesn't like tea\", \"she does not like tea\"] }\n  ]\n}\nREQUIREMENTS:\n- ${itemsCount} sentences containing a typical error connected to \"${topic}\".\n- Provide clear English hints.\n- Match the formatting requested in the prompt (for example, omit the period).\n      `.trim(),\n      user: oneLineUser(topic, 'error', itemsCount),\n    },\n\n    order: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"order-${seedId}-1\",\n  \"type\": \"order\",\n  \"prompt\": \"Put the words in the correct order.\",\n  \"items\": [\n    { \"q\": \"Arrange the sentence\", \"tokens\": [\"she\", \"often\", \"reads\", \"books\"], \"answer\": \"she often reads books\" }\n  ]\n}\nREQUIREMENTS:\n- ${itemsCount} items.\n- Provide tokens that form exactly the correct answer (lowercase, no period unless required by the topic).\n- Use sentences relevant to \"${topic}\".\n      `.trim(),\n      user: oneLineUser(topic, 'order', itemsCount),\n    },\n\n    short: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"short-${seedId}-1\",\n  \"type\": \"short\",\n  \"prompt\": \"Write short answers about ${topic}.\",\n  \"items\": [\n    { \"q\": \"Write 2–3 sentences about your daily routine.\", \"keywords\": [\"i\", \"usually\", \"every\"] }\n  ]\n}\nREQUIREMENTS:\n- ${Math.min(\n        6,\n        Math.max(3, Math.floor(itemsCount / 2))\n      )} tasks that invite short written responses.\n- \"keywords\" act as guidance, not strict scoring rubrics, and must be lowercase English words.\n      `.trim(),\n      user: oneLineUser(topic, 'short', itemsCount),\n    },\n\n    writing: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"writing-${seedId}-1\",\n  \"type\": \"writing\",\n  \"prompt\": \"Short writing task about ${topic}.\",\n  \"description\": \"<1–2 sentences describing the assignment>\",\n  \"checklist\": [\n    \"<criterion 1>\",\n    \"<criterion 2>\",\n    \"<criterion 3>\"\n  ]\n}\nREQUIREMENTS:\n- Provide a clear English description of the task.\n- Include 4–6 checklist items with concrete evaluation criteria.\n      `.trim(),\n      user: oneLineUser(topic, 'writing', itemsCount),\n    },\n    roleplay: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"roleplay-${seedId}-1\",\n  \"type\": \"roleplay\",\n  \"prompt\": \"<short instruction in English>\",\n  \"scenario\": {\n    \"setting\": \"<where the situation takes place>\",\n    \"summary\": \"<1–2 sentences describing the task>\",\n    \"roles\": [\n      {\n        \"name\": \"Student 1\",\n        \"goal\": \"<goal to achieve>\",\n        \"details\": \"<two facts or prompts>\"\n      },\n      {\n        \"name\": \"Student 2\",\n        \"goal\": \"<goal to achieve>\",\n        \"details\": \"<two facts or prompts>\"\n      }\n    ],\n    \"steps\": [\n      \"<step 1>\",\n      \"<step 2>\",\n      \"<step 3>\",\n      \"<step 4>\"\n    ]\n  },\n  \"phrases\": [\n    { \"phrase\": \"<useful English phrase>\", \"translation\": \"<short explanation or translation in English>\" }\n  ]\n}\nREQUIREMENTS:\n- The situation must clearly connect to the topic \"${topic}\".\n- Exactly two roles: Student 1 and Student 2.\n- Provide 3–5 steps describing how the dialogue should develop.\n- Include ${Math.max(6, Math.min(10, itemsCount))} useful English phrases with brief English explanations or synonyms.\n- Do not add bullet symbols inside the strings.\n      `.trim(),\n      user: oneLineUser(topic, 'roleplay', itemsCount),\n    },\n    'dialogue-gap': {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"dialogue-gap-${seedId}-1\",\n  \"type\": \"dialogue-gap\",\n  \"prompt\": \"Fill the blanks in the dialogue using the word bank.\",\n  \"words\": [\"<word1>\", \"<word2>\", \"<word3>\"],\n  \"dialogue\": [\n    { \"speaker\": \"Student 1\", \"line\": \"<Line with one or two ___ blanks>\" }\n  ],\n  \"answers\": [\"<correct word 1>\", \"<correct word 2>\"]\n}\nREQUIREMENTS:\n- ${Math.max(4, Math.min(8, itemsCount))} turns in the dialogue.\n- Use exactly ${Math.max(4, Math.min(8, itemsCount))} blanks \"___\" across the dialogue.\n- \"words\" must include every required word once with no extra distractors.\n- \"answers\" list the correct words in the order the blanks appear (lowercase English).\n- Keep each line short (maximum 12 words) and on the topic \"${topic}\".\n- Do not add extra fields beyond the schema.\n      `.trim(),\n      user: oneLineUser(topic, 'dialogue-gap', itemsCount),\n    },\n    'dialogue-order': {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"dialogue-order-${seedId}-1\",\n  \"type\": \"dialogue-order\",\n  \"prompt\": \"Arrange the dialogue lines in the correct order.\",\n  \"lines\": [\n    { \"speaker\": \"Student 1\", \"line\": \"<Line>\" },\n    { \"speaker\": \"Student 2\", \"line\": \"<Line>\" }\n  ],\n  \"solution\": [1, 0]\n}\nREQUIREMENTS:\n- ${Math.max(4, Math.min(8, itemsCount))} total lines.\n- Each line must contain 6–12 words, sound natural, and stay on the topic \"${topic}\".\n- \"solution\" is an array of zero-based indices describing the correct order of the lines.\n- Do not add extra fields beyond the schema.\n      `.trim(),\n      user: oneLineUser(topic, 'dialogue-order', itemsCount),\n    },\n    truefalse: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"truefalse-${seedId}-1\",\n  \"type\": \"truefalse\",\n  \"prompt\": \"Decide if each statement is true or false.\",\n  \"items\": [\n    { \"statement\": \"<short statement>\", \"answer\": true }\n  ]\n}\nREQUIREMENTS:\n- ${Math.max(6, Math.min(12, itemsCount))} statements.\n- \"answer\" must be strictly true or false.\n- Use simple A1–A2 level sentences in English related to \"${topic}\".\n      `.trim(),\n      user: oneLineUser(topic, 'truefalse', itemsCount),\n    },\n    'definition-match': {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"definition-match-${seedId}-1\",\n  \"type\": \"definition-match\",\n  \"prompt\": \"Match the word with its definition.\",\n  \"pairs\": [\n    { \"left\": \"<word>\", \"right\": \"<short definition>\" }\n  ]\n}\nREQUIREMENTS:\n- ${Math.max(6, Math.min(10, itemsCount))} pairs.\n- \"left\" must be a single lowercase word without articles.\n- \"right\" must be one sentence of up to 14 words.\n- Use vocabulary connected to the topic \"${topic}\".\n      `.trim(),\n      user: oneLineUser(topic, 'definition-match', itemsCount),\n    },\n    'synonym-clue': {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"synonym-clue-${seedId}-1\",\n  \"type\": \"synonym-clue\",\n  \"prompt\": \"Choose the correct word based on the clue.\",\n  \"wordBank\": [\"<word1>\", \"<word2>\", \"<word3>\"],\n  \"items\": [\n    { \"clue\": \"<clue>\", \"answers\": [\"<correct word>\"] }\n  ]\n}\nREQUIREMENTS:\n- ${Math.max(6, Math.min(10, itemsCount))} items.\n- Provide a word bank of 6–8 lowercase English words that includes all correct answers.\n- \"answers\" may contain 1–2 acceptable synonyms, all in lowercase English.\n- Write concise clues; omit the final period if the clue is a fragment.\n      `.trim(),\n      user: oneLineUser(topic, 'synonym-clue', itemsCount),\n    },\n    scramble: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"scramble-${seedId}-1\",\n  \"type\": \"scramble\",\n  \"prompt\": \"Unscramble the word.\",\n  \"items\": [\n    { \"scrambled\": \"<jumbled letters>\", \"answers\": [\"<correct word>\"] }\n  ]\n}\nREQUIREMENTS:\n- ${Math.max(6, Math.min(10, itemsCount))} items.\n- \"scrambled\" must be a shuffled version of an English word from \"${topic}\".\n- \"answers\" may list 1–2 valid spellings in lowercase English.\n      `.trim(),\n      user: oneLineUser(topic, 'scramble', itemsCount),\n    },\n    wordpairs: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"wordpairs-${seedId}-1\",\n  \"type\": \"wordpairs\",\n  \"prompt\": \"Match the singular form to the plural form.\",\n  \"pairs\": [\n    { \"left\": \"<singular>\", \"right\": \"<plural>\" }\n  ]\n}\nREQUIREMENTS:\n- ${Math.max(6, Math.min(10, itemsCount))} pairs.\n- Use accurate singular/plural pairs relevant to \"${topic}\".\n- Do not add extra keys beyond the schema.\n      `.trim(),\n      user: oneLineUser(topic, 'wordpairs', itemsCount),\n    },\n    'odd-one-out': {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"odd-one-out-${seedId}-1\",\n  \"type\": \"odd-one-out\",\n  \"prompt\": \"Find the odd one out.\",\n  \"items\": [\n    { \"options\": [\"<word1>\", \"<word2>\", \"<word3>\", \"<word4>\"], \"answer\": \"2\", \"explanation\": \"<reason>\" }\n  ]\n}\nREQUIREMENTS:\n- ${Math.max(6, Math.min(10, itemsCount))} items.\n- Provide exactly 4 options per item.\n- \"answer\" must be the index of the odd item as a string (\"0\"–\"3\").\n- Include a brief English explanation (up to 10 words) for why the option is odd.\n- Only one option may be different; the rest must relate to \"${topic}\".\n      `.trim(),\n      user: oneLineUser(topic, 'odd-one-out', itemsCount),\n    },\n    context: {\n      system: `\n${commonRules}\nOUTPUT SCHEMA:\n{\n  \"id\": \"context-${seedId}-1\",\n  \"type\": \"context\",\n  \"prompt\": \"<instruction in English>\",\n  \"context\": {\n    \"title\": \"<2–4 words>\",\n    \"format\": \"dialog\" | \"narrative\",\n    \"body\": []\n  },\n  \"questions\": [\n    {\n      \"q\": \"<question>\",\n      \"choices\": [\"<option0>\", \"<option1>\", \"<option2>\"],\n      \"answer\": [\"<index_of_correct_choice_as_string>\"]\n    },\n    ...\n  ]\n}\n\nREQUIREMENTS:\n- Provide ${itemsCount} comprehension questions for the passage.\n- Keep the text within 200 words using simple A1 English connected to \"${topic}\".\n- If \"format\" is \"dialog\", use objects {\"speaker\": \"...\", \"line\": \"...\"}.\n- If \"format\" is \"narrative\", use an array of short paragraph strings.\n- Each question must offer exactly 3 choices and a single correct answer.\n- Return the index of the correct choice as a string (\"0\" | \"1\" | \"2\").\n- Output only JSON, no extra commentary.\n\nEXAMPLE (FORMAT ONLY; DO NOT COPY CONTENT):\n{\n  \"id\": \"context-ps-1\",\n  \"type\": \"context\",\n  \"prompt\": \"Read the dialogue and choose the correct answer.\",\n  \"context\": {\n    \"title\": \"Morning Chat\",\n    \"format\": \"dialog\",\n    \"body\": [\n      { \"speaker\": \"Emma\", \"line\": \"Hi, Leo! Are you ready for school?\" },\n      { \"speaker\": \"Leo\", \"line\": \"Yes, but I can't find my maths book.\" },\n      { \"speaker\": \"Emma\", \"line\": \"Check your bag again.\" }\n    ]\n  },\n  \"questions\": [\n    {\n      \"q\": \"What did Leo lose?\",\n      \"choices\": [\"Pencil case\", \"Math textbook\", \"English notebook\"],\n      \"answer\": [\"1\"]\n    }\n  ]\n}`.trim(),\n      user: oneLineUser(topic, 'context', itemsCount),\n    },\n  };\n\n  const tpl = templates[type];\n  if (!tpl) {\n    // fallback на mcq, якщо передали невідомий тип\n    return templates.mcq;\n  }\n\n  return tpl;\n}\n\n// ---- Helpers ----------------------------------------------------------------\nconst defaultItemsByType = {\n  mcq: 10,\n  gap: 10,\n  transform: 10,\n  match: 8,\n  error: 10,\n  order: 10,\n  short: 3,\n  writing: 1,\n  roleplay: 8,\n  'dialogue-gap': 6,\n  'dialogue-order': 6,\n  truefalse: 8,\n  'definition-match': 8,\n  'synonym-clue': 8,\n  scramble: 8,\n  wordpairs: 8,\n  'odd-one-out': 8,\n  context: 4,\n};\n\nfunction oneLineUser(topic, type, itemsCount) {\n  return `Topic: ${topic}\\nGenerate a task block of type \"${type}\" with ${itemsCount} items. Return JSON only that follows the described schema.`;\n}\n\nfunction shortSeed(s) {\n  return (\n    String(s || 'task')\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/^-+|-+$/g, '')\n      .slice(0, 6) || 'task'\n  );\n}\n\nfunction appendVocabularyToPrompt(userContent, vocabulary) {\n  const trimmed = String(userContent || '').trim();\n  const formattedList = formatVocabularyList(vocabulary);\n  if (!formattedList) return trimmed || userContent || '';\n  const base = trimmed || 'Generate the task block.';\n  return `${base}\\n\\nFocus on these vocabulary items:\\n${formattedList}`;\n}\n\nfunction formatVocabularyList(list) {\n  if (!Array.isArray(list) || !list.length) return '';\n  const lines = list\n    .map((entry, index) => {\n      if (!entry) return '';\n      const word = entry.word || entry.term || entry.phrase || entry.text || `Item ${index + 1}`;\n      const translation = entry.translation || entry.meaning || entry.ua || entry.uk || '';\n      const example = entry.example || entry.sentence || entry.usage || entry.sample || '';\n      let line = `${index + 1}. ${word}`;\n      if (translation) line += ` — ${translation}`;\n      if (example) line += ` (Example: ${example})`;\n      return line;\n    })\n    .filter(Boolean);\n  if (!lines.length) return '';\n  return lines.join('\\n');\n}\n","import { generateTask } from './api/chatGpt.js';\n\nconst adminWrapper = document.querySelector('.js-practice-section');\nconst form = document.querySelector('[data-practice-generator]');\nconst statusElement = form?.querySelector('[data-practice-status]');\nconst outputWrapper = document.querySelector('[data-generator-output]');\nconst jsonElement = document.querySelector('[data-generator-json]');\nconst copyButton = document.querySelector('[data-generator-copy]');\nconst downloadButton = document.querySelector('[data-generator-download]');\nconst typesContainer = form?.querySelector('[data-types]');\nconst typesTrigger = form?.querySelector('[data-types-trigger]');\nconst typesPanel = form?.querySelector('[data-types-panel]');\nconst placeholder = document.querySelector('[data-practice-placeholder]');\n\nconst defaultContext = window.lessonContext || {};\n\nlet baseTitle = defaultContext.title || 'Generated Practice';\nlet baseLevel = defaultContext.level || 'custom';\nconst baseTasks = [];\nconst generatedTasks = [];\n\nfunction hideElement(element) {\n  if (!element) return;\n  element.classList.add('hidden');\n}\n\nfunction showElement(element) {\n  if (!element) return;\n  element.classList.remove('hidden');\n}\n\nfunction isElementHidden(element) {\n  return !element || element.classList.contains('hidden');\n}\n\nfunction isGeneratorHidden() {\n  return localStorage.getItem('hideGenerateSection') === 'true';\n}\n\nfunction applyGeneratorVisibility() {\n  if (isGeneratorHidden()) {\n    hideElement(adminWrapper);\n    hideElement(typesPanel);\n    hideElement(outputWrapper);\n    closeTypesPanel();\n  } else {\n    showElement(adminWrapper);\n    updateTypesTriggerLabel();\n    updateJsonPreview();\n  }\n}\n\nfunction createTaskKey(task) {\n  const base =\n    task && typeof task === 'object' && task.id\n      ? String(task.id)\n      : String(task?.type || 'task');\n  return `${base}-${Date.now()}-${Math.random().toString(16).slice(2, 8)}`;\n}\n\nfunction buildAggregatePayload() {\n  return {\n    title: baseTitle || defaultContext.title || 'Generated Practice',\n    level: baseLevel || defaultContext.level || 'custom',\n    tasks: [...baseTasks, ...generatedTasks].map(item => item.data),\n  };\n}\n\nfunction updateJsonPreview() {\n  if (!jsonElement) return;\n\n  if (isGeneratorHidden()) {\n    hideElement(outputWrapper);\n    return;\n  }\n\n  if (!baseTasks.length && !generatedTasks.length) {\n    jsonElement.textContent = '';\n    hideElement(outputWrapper);\n    if (copyButton) copyButton.disabled = true;\n    if (downloadButton) downloadButton.disabled = true;\n    return;\n  }\n\n  jsonElement.textContent = JSON.stringify(buildAggregatePayload(), null, 2);\n  showElement(outputWrapper);\n  if (copyButton) copyButton.disabled = false;\n  if (downloadButton) downloadButton.disabled = false;\n}\n\nfunction addGeneratedTask(task) {\n  const key = createTaskKey(task);\n  generatedTasks.push({ key, data: task });\n  updateJsonPreview();\n  return key;\n}\n\nfunction removeTask(key, task) {\n  const removeFrom = list => {\n    const index = list.findIndex(\n      item => (key && item.key === key) || item.data === task\n    );\n    if (index !== -1) {\n      list.splice(index, 1);\n      return true;\n    }\n    return false;\n  };\n\n  const removed = removeFrom(generatedTasks) || removeFrom(baseTasks);\n  if (removed) {\n    updateJsonPreview();\n  }\n}\n\nfunction setInitialTopic() {\n  if (!form) return;\n  const topicInput = form.querySelector('[name=\"topic\"]');\n  if (topicInput && !topicInput.value) {\n    const initialTopic = defaultContext.title || 'Lesson topic';\n    topicInput.value = initialTopic;\n  }\n}\n\nfunction setStatus(message, state = 'idle') {\n  if (!statusElement) return;\n  statusElement.textContent = message;\n  statusElement.dataset.state = state;\n}\n\nfunction slugify(value) {\n  return String(value || '')\n    .toLowerCase()\n    .replace(/[^a-z0-9]+/g, '-')\n    .replace(/^-+|-+$/g, '')\n    .slice(0, 8);\n}\n\nfunction toFileSlug(value) {\n  return String(value || '')\n    .toLowerCase()\n    .replace(/[^a-z0-9]+/g, '-')\n    .replace(/^-+|-+$/g, '');\n}\n\nfunction getTypeInputs() {\n  return Array.from(form.querySelectorAll('input[name=\"types\"]'));\n}\n\nfunction formatTypesLabel(inputs) {\n  const selected = inputs\n    .filter(input => input.checked)\n    .map(input => input.nextElementSibling?.textContent?.trim())\n    .filter(Boolean);\n\n  if (!selected.length) return 'Оберіть типи';\n  if (selected.length <= 2) return selected.join(', ');\n  return `${selected.slice(0, 2).join(', ')} +${selected.length - 2}`;\n}\n\nfunction updateTypesTriggerLabel() {\n  if (!typesTrigger) return;\n  const inputs = getTypeInputs();\n  typesTrigger.textContent = formatTypesLabel(inputs);\n}\n\nfunction closeTypesPanel() {\n  if (!typesPanel || !typesTrigger) return;\n  if (!isElementHidden(typesPanel)) {\n    hideElement(typesPanel);\n    typesTrigger.setAttribute('aria-expanded', 'false');\n  }\n}\n\nfunction toggleTypesPanel() {\n  if (!typesPanel || !typesTrigger) return;\n  const willOpen = isElementHidden(typesPanel);\n  if (willOpen) {\n    showElement(typesPanel);\n    typesTrigger.setAttribute('aria-expanded', 'true');\n    const firstInput = typesPanel.querySelector('input[name=\"types\"]');\n    firstInput?.focus({ preventScroll: true });\n  } else {\n    closeTypesPanel();\n  }\n}\n\nfunction toggleGeneratorVisibility() {\n  const shouldHide = !isGeneratorHidden();\n  localStorage.setItem('hideGenerateSection', String(shouldHide));\n  applyGeneratorVisibility();\n  updateJsonPreview();\n}\n\nfunction clearPracticeEmptyState() {\n  const practiceRoot = document.getElementById('practice');\n  const body = practiceRoot?.querySelector('#practice-body');\n  if (placeholder) {\n    placeholder.remove();\n  }\n  if (body && body.children.length === 1) {\n    const first = body.firstElementChild;\n    if (first && /практика поки відсутня/i.test(first.textContent || '')) {\n      first.remove();\n    }\n  }\n}\n\nfunction ensurePracticeHeader() {\n  const practiceRoot = document.getElementById('practice');\n  if (!practiceRoot) return;\n  const body = practiceRoot.querySelector('#practice-body');\n  if (body && !body.querySelector('.practice-dynamic-title')) {\n    const header = document.createElement('div');\n    header.className = 'practice-dynamic-title';\n    header.innerHTML = `\n      <h2>Згенеровані завдання</h2>\n      ${\n        defaultContext.level\n          ? `<p class=\"muted\">Рівень: ${defaultContext.level}</p>`\n          : ''\n      }\n    `;\n    body.prepend(header);\n  }\n}\n\nasync function handleSubmit(event) {\n  event.preventDefault();\n  if (!form) return;\n\n  const submitButton = form.querySelector('button[type=\"submit\"]');\n  const topicInput = form.querySelector('[name=\"topic\"]');\n  const countInput = form.querySelector('[name=\"count\"]');\n  const typeInputs = getTypeInputs();\n\n  const topic = topicInput?.value?.trim();\n  const count = Number.parseInt(countInput?.value || '10', 10) || 10;\n  const selectedTypes = typeInputs\n    .filter(input => input.checked)\n    .map(input => input.value);\n\n  if (!topic) {\n    setStatus('Укажіть тему для генерації завдання.', 'error');\n    topicInput?.focus();\n    return;\n  }\n\n  if (!selectedTypes.length && typeof closeTypesPanel === 'function') {\n    setStatus('Оберіть принаймні один тип завдання.', 'error');\n    return;\n  }\n\n  const seedBase = slugify(topic) || 'task';\n  setStatus(`Генеруємо ${selectedTypes.length} тип(и) завдань…`, 'loading');\n  if (submitButton) {\n    submitButton.disabled = true;\n    submitButton.dataset.originalText =\n      submitButton.dataset.originalText || submitButton.textContent;\n    submitButton.textContent = 'Генерація…';\n  }\n\n  const shouldAttachVocabulary =\n    String(defaultContext.category || '').toLowerCase() === 'communication' &&\n    Array.isArray(window.communicationCurrentWords) &&\n    window.communicationCurrentWords.length;\n  const vocabulary = shouldAttachVocabulary ? window.communicationCurrentWords : undefined;\n\n  try {\n    const generationPromises = selectedTypes.map(type =>\n      generateTask(\n        topic,\n        type,\n        {\n          items: count,\n          language: 'en',\n          seedId: `${seedBase}-${type}`,\n        },\n        vocabulary,\n      ).then(task => ({ type, task }))\n    );\n\n    const settled = await Promise.allSettled(generationPromises);\n    const successful = settled\n      .map((result, index) =>\n        result.status === 'fulfilled'\n          ? { type: selectedTypes[index], task: result.value.task }\n          : null\n      )\n      .filter(Boolean);\n    const failed = settled\n      .map((result, index) =>\n        result.status === 'rejected' ? selectedTypes[index] : null\n      )\n      .filter(Boolean);\n\n    if (!successful.length) {\n      throw new Error('Не вдалося згенерувати жодного типу завдань');\n    }\n\n    const appended = [];\n    successful.forEach(({ type, task }) => {\n      const normalizedTask = { ...task };\n      if (!normalizedTask.id) {\n        normalizedTask.id = `${type}-${seedBase}-${Date.now().toString(\n          36\n        )}${Math.random().toString(36).slice(2, 6)}`;\n      }\n      const key = addGeneratedTask(normalizedTask);\n      appended.push({ task: normalizedTask, key });\n    });\n\n    clearPracticeEmptyState();\n    if (window.practice && typeof window.practice.appendTask === 'function') {\n      ensurePracticeHeader();\n      appended.forEach(({ task: generatedTask, key }) => {\n        window.practice.appendTask(generatedTask, { key });\n      });\n    }\n\n    closeTypesPanel();\n\n    const successTypes = successful.map(({ type }) => type).join(', ');\n    if (failed.length) {\n      setStatus(\n        `Згенеровано: ${successTypes}. Помилки: ${failed.join(', ')}`,\n        'success'\n      );\n    } else {\n      setStatus(\n        `Готово! Додано ${successful.length} блок(и): ${successTypes}.`,\n        'success'\n      );\n    }\n  } catch (error) {\n    console.error(error);\n    const message =\n      error instanceof Error && error.message\n        ? `Помилка: ${error.message}`\n        : 'Не вдалося згенерувати завдання. Перевірте токен або спробуйте ще раз.';\n    setStatus(message, 'error');\n  } finally {\n    if (submitButton) {\n      const original =\n        submitButton.dataset.originalText || 'Згенерувати завдання';\n      submitButton.disabled = false;\n      submitButton.textContent = original;\n    }\n  }\n}\n\nasync function handleCopy() {\n  if (!jsonElement) return;\n  const content = jsonElement.textContent;\n  if (!content) return;\n  try {\n    await navigator.clipboard.writeText(content);\n    setStatus('JSON скопійовано у буфер.', 'success');\n  } catch (error) {\n    console.error(error);\n    setStatus('Не вдалося скопіювати JSON. Спробуйте вручну.', 'error');\n  }\n}\n\nfunction getDownloadFilename(payload) {\n  const base =\n    toFileSlug(defaultContext.id) ||\n    toFileSlug(payload.title) ||\n    toFileSlug(defaultContext.title) ||\n    'practice';\n  return `${base || 'practice'}.json`;\n}\n\nasync function handleDownload() {\n  const payload = buildAggregatePayload();\n  const content = JSON.stringify(payload, null, 2);\n  if (!content || content === '{}' || content === '[]') {\n    setStatus('Немає даних для завантаження.', 'error');\n    return;\n  }\n\n  try {\n    const blob = new Blob([content], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const anchor = document.createElement('a');\n    anchor.href = url;\n    anchor.download = getDownloadFilename(payload);\n    document.body.appendChild(anchor);\n    anchor.click();\n    document.body.removeChild(anchor);\n    URL.revokeObjectURL(url);\n    setStatus('Файл завантажено.', 'success');\n  } catch (error) {\n    console.error(error);\n    setStatus('Не вдалося завантажити файл.', 'error');\n  }\n}\n\nfunction init() {\n  if (!form) return;\n  setInitialTopic();\n  form.addEventListener('submit', handleSubmit);\n  if (copyButton) {\n    copyButton.addEventListener('click', handleCopy);\n    copyButton.disabled = true;\n  }\n  if (downloadButton) {\n    downloadButton.addEventListener('click', handleDownload);\n    downloadButton.disabled = true;\n  }\n\n  if (typesTrigger && typesPanel && typesContainer) {\n    typesTrigger.setAttribute('aria-haspopup', 'true');\n    typesTrigger.setAttribute('aria-expanded', 'false');\n    typesTrigger.addEventListener('click', () => {\n      toggleTypesPanel();\n    });\n\n    const handlePointerDown = event => {\n      if (!typesContainer.contains(event.target)) {\n        closeTypesPanel();\n      }\n    };\n\n    document.addEventListener('pointerdown', handlePointerDown);\n\n    const handleFocusOut = event => {\n      const next = event.relatedTarget;\n      if (!next || !typesContainer.contains(next)) {\n        closeTypesPanel();\n      }\n    };\n\n    typesContainer.addEventListener('focusout', handleFocusOut);\n\n    document.addEventListener('keydown', event => {\n      if (event.key === 'Escape') {\n        closeTypesPanel();\n        typesTrigger.focus();\n      }\n    });\n\n    getTypeInputs().forEach(input => {\n      input.addEventListener('change', () => {\n        updateTypesTriggerLabel();\n      });\n    });\n    updateTypesTriggerLabel();\n\n    form.addEventListener('submit', () => {\n      closeTypesPanel();\n    });\n  }\n\n  document.addEventListener('practice:taskRemoved', event => {\n    const detail = event.detail || {};\n    removeTask(detail.key, detail.task);\n  });\n\n  document.addEventListener('practice:dataLoaded', event => {\n    const detail = event.detail;\n    baseTasks.length = 0;\n    if (detail && Array.isArray(detail.entries)) {\n      baseTitle = detail.title ?? baseTitle;\n      baseLevel = detail.level ?? baseLevel;\n      detail.entries.forEach(({ task, key }) => {\n        const entryKey = key || createTaskKey(task);\n        baseTasks.push({ key: entryKey, data: task });\n      });\n    } else if (detail && Array.isArray(detail.tasks)) {\n      baseTitle = detail.title ?? baseTitle;\n      baseLevel = detail.level ?? baseLevel;\n      detail.tasks.forEach(task => {\n        const entryKey =\n          task && task.id ? String(task.id) : createTaskKey(task);\n        baseTasks.push({ key: entryKey, data: task });\n      });\n    } else {\n      if (!detail) {\n        baseTitle = defaultContext.title || baseTitle;\n        baseLevel = defaultContext.level || baseLevel;\n      } else {\n        baseTitle = detail.title ?? baseTitle;\n        baseLevel = detail.level ?? baseLevel;\n      }\n    }\n    updateJsonPreview();\n    applyGeneratorVisibility();\n  });\n\n  applyGeneratorVisibility();\n  updateJsonPreview();\n\n  document.addEventListener('keydown', event => {\n    if (\n      event.code &&\n      event.code === 'KeyH' &&\n      event.ctrlKey &&\n      event.shiftKey\n    ) {\n      event.preventDefault();\n      toggleGeneratorVisibility();\n    }\n  });\n}\n\ninit();\n"],"file":"lesson.js"}